0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Sun Mar 06 17:23:20 2016
0000              5   ;--------------------------------------------------------
                  5   $name C851F38x_ADC_multiple_inputs
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _main
0000             28            public _UART0_Init
0000             29            public _TIMER0_Init
0000             30            public _waitms
0000             31            public _Timer3us
0000             32            public _PORT_Init
0000             33            public _SYSCLK_Init
0000             34            public __c51_external_startup
0000             35   ;--------------------------------------------------------
0000             36   ; Special Function Registers
0000             37   ;--------------------------------------------------------
0000             38   _P0             DATA 0x80
0000             39   _SP             DATA 0x81
0000             40   _DPL            DATA 0x82
0000             41   _DPH            DATA 0x83
0000             42   _EMI0TC         DATA 0x84
0000             43   _EMI0CF         DATA 0x85
0000             44   _OSCLCN         DATA 0x86
0000             45   _PCON           DATA 0x87
0000             46   _TCON           DATA 0x88
0000             47   _TMOD           DATA 0x89
0000             48   _TL0            DATA 0x8a
0000             49   _TL1            DATA 0x8b
0000             50   _TH0            DATA 0x8c
0000             51   _TH1            DATA 0x8d
0000             52   _CKCON          DATA 0x8e
0000             53   _PSCTL          DATA 0x8f
0000             54   _P1             DATA 0x90
0000             55   _TMR3CN         DATA 0x91
0000             56   _TMR4CN         DATA 0x91
0000             57   _TMR3RLL        DATA 0x92
0000             58   _TMR4RLL        DATA 0x92
0000             59   _TMR3RLH        DATA 0x93
0000             60   _TMR4RLH        DATA 0x93
0000             61   _TMR3L          DATA 0x94
0000             62   _TMR4L          DATA 0x94
0000             63   _TMR3H          DATA 0x95
0000             64   _TMR4H          DATA 0x95
0000             65   _USB0ADR        DATA 0x96
0000             66   _USB0DAT        DATA 0x97
0000             67   _SCON           DATA 0x98
0000             68   _SCON0          DATA 0x98
0000             69   _SBUF           DATA 0x99
0000             70   _SBUF0          DATA 0x99
0000             71   _CPT1CN         DATA 0x9a
0000             72   _CPT0CN         DATA 0x9b
0000             73   _CPT1MD         DATA 0x9c
0000             74   _CPT0MD         DATA 0x9d
0000             75   _CPT1MX         DATA 0x9e
0000             76   _CPT0MX         DATA 0x9f
0000             77   _P2             DATA 0xa0
0000             78   _SPI0CFG        DATA 0xa1
0000             79   _SPI0CKR        DATA 0xa2
0000             80   _SPI0DAT        DATA 0xa3
0000             81   _P0MDOUT        DATA 0xa4
0000             82   _P1MDOUT        DATA 0xa5
0000             83   _P2MDOUT        DATA 0xa6
0000             84   _P3MDOUT        DATA 0xa7
0000             85   _IE             DATA 0xa8
0000             86   _CLKSEL         DATA 0xa9
0000             87   _EMI0CN         DATA 0xaa
0000             88   __XPAGE         DATA 0xaa
0000             89   _SBCON1         DATA 0xac
0000             90   _P4MDOUT        DATA 0xae
0000             91   _PFE0CN         DATA 0xaf
0000             92   _P3             DATA 0xb0
0000             93   _OSCXCN         DATA 0xb1
0000             94   _OSCICN         DATA 0xb2
0000             95   _OSCICL         DATA 0xb3
0000             96   _SBRLL1         DATA 0xb4
0000             97   _SBRLH1         DATA 0xb5
0000             98   _FLSCL          DATA 0xb6
0000             99   _FLKEY          DATA 0xb7
0000            100   _IP             DATA 0xb8
0000            101   _CLKMUL         DATA 0xb9
0000            102   _SMBTC          DATA 0xb9
0000            103   _AMX0N          DATA 0xba
0000            104   _AMX0P          DATA 0xbb
0000            105   _ADC0CF         DATA 0xbc
0000            106   _ADC0L          DATA 0xbd
0000            107   _ADC0H          DATA 0xbe
0000            108   _SFRPAGE        DATA 0xbf
0000            109   _SMB0CN         DATA 0xc0
0000            110   _SMB1CN         DATA 0xc0
0000            111   _SMB0CF         DATA 0xc1
0000            112   _SMB1CF         DATA 0xc1
0000            113   _SMB0DAT        DATA 0xc2
0000            114   _SMB1DAT        DATA 0xc2
0000            115   _ADC0GTL        DATA 0xc3
0000            116   _ADC0GTH        DATA 0xc4
0000            117   _ADC0LTL        DATA 0xc5
0000            118   _ADC0LTH        DATA 0xc6
0000            119   _P4             DATA 0xc7
0000            120   _TMR2CN         DATA 0xc8
0000            121   _TMR5CN         DATA 0xc8
0000            122   _REG01CN        DATA 0xc9
0000            123   _TMR2RLL        DATA 0xca
0000            124   _TMR5RLL        DATA 0xca
0000            125   _TMR2RLH        DATA 0xcb
0000            126   _TMR5RLH        DATA 0xcb
0000            127   _TMR2L          DATA 0xcc
0000            128   _TMR5L          DATA 0xcc
0000            129   _TMR2H          DATA 0xcd
0000            130   _TMR5H          DATA 0xcd
0000            131   _SMB0ADM        DATA 0xce
0000            132   _SMB1ADM        DATA 0xce
0000            133   _SMB0ADR        DATA 0xcf
0000            134   _SMB1ADR        DATA 0xcf
0000            135   _PSW            DATA 0xd0
0000            136   _REF0CN         DATA 0xd1
0000            137   _SCON1          DATA 0xd2
0000            138   _SBUF1          DATA 0xd3
0000            139   _P0SKIP         DATA 0xd4
0000            140   _P1SKIP         DATA 0xd5
0000            141   _P2SKIP         DATA 0xd6
0000            142   _USB0XCN        DATA 0xd7
0000            143   _PCA0CN         DATA 0xd8
0000            144   _PCA0MD         DATA 0xd9
0000            145   _PCA0CPM0       DATA 0xda
0000            146   _PCA0CPM1       DATA 0xdb
0000            147   _PCA0CPM2       DATA 0xdc
0000            148   _PCA0CPM3       DATA 0xdd
0000            149   _PCA0CPM4       DATA 0xde
0000            150   _P3SKIP         DATA 0xdf
0000            151   _ACC            DATA 0xe0
0000            152   _XBR0           DATA 0xe1
0000            153   _XBR1           DATA 0xe2
0000            154   _XBR2           DATA 0xe3
0000            155   _IT01CF         DATA 0xe4
0000            156   _CKCON1         DATA 0xe4
0000            157   _SMOD1          DATA 0xe5
0000            158   _EIE1           DATA 0xe6
0000            159   _EIE2           DATA 0xe7
0000            160   _ADC0CN         DATA 0xe8
0000            161   _PCA0CPL1       DATA 0xe9
0000            162   _PCA0CPH1       DATA 0xea
0000            163   _PCA0CPL2       DATA 0xeb
0000            164   _PCA0CPH2       DATA 0xec
0000            165   _PCA0CPL3       DATA 0xed
0000            166   _PCA0CPH3       DATA 0xee
0000            167   _RSTSRC         DATA 0xef
0000            168   _B              DATA 0xf0
0000            169   _P0MDIN         DATA 0xf1
0000            170   _P1MDIN         DATA 0xf2
0000            171   _P2MDIN         DATA 0xf3
0000            172   _P3MDIN         DATA 0xf4
0000            173   _P4MDIN         DATA 0xf5
0000            174   _EIP1           DATA 0xf6
0000            175   _EIP2           DATA 0xf7
0000            176   _SPI0CN         DATA 0xf8
0000            177   _PCA0L          DATA 0xf9
0000            178   _PCA0H          DATA 0xfa
0000            179   _PCA0CPL0       DATA 0xfb
0000            180   _PCA0CPH0       DATA 0xfc
0000            181   _PCA0CPL4       DATA 0xfd
0000            182   _PCA0CPH4       DATA 0xfe
0000            183   _VDM0CN         DATA 0xff
0000            184   _DPTR           DATA 0x8382
0000            185   _TMR2RL         DATA 0xcbca
0000            186   _TMR3RL         DATA 0x9392
0000            187   _TMR4RL         DATA 0x9392
0000            188   _TMR5RL         DATA 0xcbca
0000            189   _TMR2           DATA 0xcdcc
0000            190   _TMR3           DATA 0x9594
0000            191   _TMR4           DATA 0x9594
0000            192   _TMR5           DATA 0xcdcc
0000            193   _SBRL1          DATA 0xb5b4
0000            194   _ADC0           DATA 0xbebd
0000            195   _ADC0GT         DATA 0xc4c3
0000            196   _ADC0LT         DATA 0xc6c5
0000            197   _PCA0           DATA 0xfaf9
0000            198   _PCA0CP1        DATA 0xeae9
0000            199   _PCA0CP2        DATA 0xeceb
0000            200   _PCA0CP3        DATA 0xeeed
0000            201   _PCA0CP0        DATA 0xfcfb
0000            202   _PCA0CP4        DATA 0xfefd
0000            203   ;--------------------------------------------------------
0000            204   ; special function bits
0000            205   ;--------------------------------------------------------
0000            206   _P0_0           BIT 0x80
0000            207   _P0_1           BIT 0x81
0000            208   _P0_2           BIT 0x82
0000            209   _P0_3           BIT 0x83
0000            210   _P0_4           BIT 0x84
0000            211   _P0_5           BIT 0x85
0000            212   _P0_6           BIT 0x86
0000            213   _P0_7           BIT 0x87
0000            214   _TF1            BIT 0x8f
0000            215   _TR1            BIT 0x8e
0000            216   _TF0            BIT 0x8d
0000            217   _TR0            BIT 0x8c
0000            218   _IE1            BIT 0x8b
0000            219   _IT1            BIT 0x8a
0000            220   _IE0            BIT 0x89
0000            221   _IT0            BIT 0x88
0000            222   _P1_0           BIT 0x90
0000            223   _P1_1           BIT 0x91
0000            224   _P1_2           BIT 0x92
0000            225   _P1_3           BIT 0x93
0000            226   _P1_4           BIT 0x94
0000            227   _P1_5           BIT 0x95
0000            228   _P1_6           BIT 0x96
0000            229   _P1_7           BIT 0x97
0000            230   _S0MODE         BIT 0x9f
0000            231   _SCON0_6        BIT 0x9e
0000            232   _MCE0           BIT 0x9d
0000            233   _REN0           BIT 0x9c
0000            234   _TB80           BIT 0x9b
0000            235   _RB80           BIT 0x9a
0000            236   _TI0            BIT 0x99
0000            237   _RI0            BIT 0x98
0000            238   _SCON_6         BIT 0x9e
0000            239   _MCE            BIT 0x9d
0000            240   _REN            BIT 0x9c
0000            241   _TB8            BIT 0x9b
0000            242   _RB8            BIT 0x9a
0000            243   _TI             BIT 0x99
0000            244   _RI             BIT 0x98
0000            245   _P2_0           BIT 0xa0
0000            246   _P2_1           BIT 0xa1
0000            247   _P2_2           BIT 0xa2
0000            248   _P2_3           BIT 0xa3
0000            249   _P2_4           BIT 0xa4
0000            250   _P2_5           BIT 0xa5
0000            251   _P2_6           BIT 0xa6
0000            252   _P2_7           BIT 0xa7
0000            253   _EA             BIT 0xaf
0000            254   _ESPI0          BIT 0xae
0000            255   _ET2            BIT 0xad
0000            256   _ES0            BIT 0xac
0000            257   _ET1            BIT 0xab
0000            258   _EX1            BIT 0xaa
0000            259   _ET0            BIT 0xa9
0000            260   _EX0            BIT 0xa8
0000            261   _P3_0           BIT 0xb0
0000            262   _P3_1           BIT 0xb1
0000            263   _P3_2           BIT 0xb2
0000            264   _P3_3           BIT 0xb3
0000            265   _P3_4           BIT 0xb4
0000            266   _P3_5           BIT 0xb5
0000            267   _P3_6           BIT 0xb6
0000            268   _P3_7           BIT 0xb7
0000            269   _IP_7           BIT 0xbf
0000            270   _PSPI0          BIT 0xbe
0000            271   _PT2            BIT 0xbd
0000            272   _PS0            BIT 0xbc
0000            273   _PT1            BIT 0xbb
0000            274   _PX1            BIT 0xba
0000            275   _PT0            BIT 0xb9
0000            276   _PX0            BIT 0xb8
0000            277   _MASTER0        BIT 0xc7
0000            278   _TXMODE0        BIT 0xc6
0000            279   _STA0           BIT 0xc5
0000            280   _STO0           BIT 0xc4
0000            281   _ACKRQ0         BIT 0xc3
0000            282   _ARBLOST0       BIT 0xc2
0000            283   _ACK0           BIT 0xc1
0000            284   _SI0            BIT 0xc0
0000            285   _MASTER1        BIT 0xc7
0000            286   _TXMODE1        BIT 0xc6
0000            287   _STA1           BIT 0xc5
0000            288   _STO1           BIT 0xc4
0000            289   _ACKRQ1         BIT 0xc3
0000            290   _ARBLOST1       BIT 0xc2
0000            291   _ACK1           BIT 0xc1
0000            292   _SI1            BIT 0xc0
0000            293   _TF2            BIT 0xcf
0000            294   _TF2H           BIT 0xcf
0000            295   _TF2L           BIT 0xce
0000            296   _TF2LEN         BIT 0xcd
0000            297   _TF2CEN         BIT 0xcc
0000            298   _T2SPLIT        BIT 0xcb
0000            299   _TR2            BIT 0xca
0000            300   _T2CSS          BIT 0xc9
0000            301   _T2XCLK         BIT 0xc8
0000            302   _TF5H           BIT 0xcf
0000            303   _TF5L           BIT 0xce
0000            304   _TF5LEN         BIT 0xcd
0000            305   _TMR5CN_4       BIT 0xcc
0000            306   _T5SPLIT        BIT 0xcb
0000            307   _TR5            BIT 0xca
0000            308   _TMR5CN_1       BIT 0xc9
0000            309   _T5XCLK         BIT 0xc8
0000            310   _CY             BIT 0xd7
0000            311   _AC             BIT 0xd6
0000            312   _F0             BIT 0xd5
0000            313   _RS1            BIT 0xd4
0000            314   _RS0            BIT 0xd3
0000            315   _OV             BIT 0xd2
0000            316   _F1             BIT 0xd1
0000            317   _PARITY         BIT 0xd0
0000            318   _CF             BIT 0xdf
0000            319   _CR             BIT 0xde
0000            320   _PCA0CN_5       BIT 0xde
0000            321   _CCF4           BIT 0xdc
0000            322   _CCF3           BIT 0xdb
0000            323   _CCF2           BIT 0xda
0000            324   _CCF1           BIT 0xd9
0000            325   _CCF0           BIT 0xd8
0000            326   _ACC_7          BIT 0xe7
0000            327   _ACC_6          BIT 0xe6
0000            328   _ACC_5          BIT 0xe5
0000            329   _ACC_4          BIT 0xe4
0000            330   _ACC_3          BIT 0xe3
0000            331   _ACC_2          BIT 0xe2
0000            332   _ACC_1          BIT 0xe1
0000            333   _ACC_0          BIT 0xe0
0000            334   _AD0EN          BIT 0xef
0000            335   _AD0TM          BIT 0xee
0000            336   _AD0INT         BIT 0xed
0000            337   _AD0BUSY        BIT 0xec
0000            338   _AD0WINT        BIT 0xeb
0000            339   _AD0CM2         BIT 0xea
0000            340   _AD0CM1         BIT 0xe9
0000            341   _AD0CM0         BIT 0xe8
0000            342   _B_7            BIT 0xf7
0000            343   _B_6            BIT 0xf6
0000            344   _B_5            BIT 0xf5
0000            345   _B_4            BIT 0xf4
0000            346   _B_3            BIT 0xf3
0000            347   _B_2            BIT 0xf2
0000            348   _B_1            BIT 0xf1
0000            349   _B_0            BIT 0xf0
0000            350   _SPIF           BIT 0xff
0000            351   _WCOL           BIT 0xfe
0000            352   _MODF           BIT 0xfd
0000            353   _RXOVRN         BIT 0xfc
0000            354   _NSSMD1         BIT 0xfb
0000            355   _NSSMD0         BIT 0xfa
0000            356   _TXBMT          BIT 0xf9
0000            357   _SPIEN          BIT 0xf8
0000            358   ;--------------------------------------------------------
0000            359   ; overlayable register banks
0000            360   ;--------------------------------------------------------
0000            361            rbank0 segment data overlay
0000            362   ;--------------------------------------------------------
0000            363   ; internal ram data
0000            364   ;--------------------------------------------------------
0000            365            rseg R_DSEG
0000            366   _main_frequency_1_1_58:
0000            367            ds 4
0004            368   _main_phase_difference_1_58:
0004            369            ds 4
0008            370   ;--------------------------------------------------------
0008            371   ; overlayable items in internal ram 
0008            372   ;--------------------------------------------------------
0000            373            rseg    R_OSEG
0000            374   ;--------------------------------------------------------
0000            375   ; indirectly addressable internal ram data
0000            376   ;--------------------------------------------------------
0000            377            rseg R_ISEG
0000            378   ;--------------------------------------------------------
0000            379   ; absolute internal ram data
0000            380   ;--------------------------------------------------------
0000            381            DSEG
0000            382   ;--------------------------------------------------------
0000            383   ; bit data
0000            384   ;--------------------------------------------------------
0000            385            rseg R_BSEG
0000            386   ;--------------------------------------------------------
0000            387   ; paged external ram data
0000            388   ;--------------------------------------------------------
0000            389            rseg R_PSEG
0000            390   ;--------------------------------------------------------
0000            391   ; external ram data
0000            392   ;--------------------------------------------------------
0000            393            rseg R_XSEG
0000            394   ;--------------------------------------------------------
0000            395   ; absolute external ram data
0000            396   ;--------------------------------------------------------
0000            397            XSEG
0000            398   ;--------------------------------------------------------
0000            399   ; external initialized ram data
0000            400   ;--------------------------------------------------------
0000            401            rseg R_IXSEG
0000            402            rseg R_HOME
0000            403            rseg R_GSINIT
0000            404            rseg R_CSEG
0000            405   ;--------------------------------------------------------
0000            406   ; Reset entry point and interrupt vectors
0000            407   ;--------------------------------------------------------
0000            408            CSEG at 0x0000
0000 020100     409            ljmp    _crt0
0003            410   ;--------------------------------------------------------
0003            411   ; global & static initialisations
0003            412   ;--------------------------------------------------------
0000            413            rseg R_HOME
0000            414            rseg R_GSINIT
0000            415            rseg R_GSINIT
0000            416   ;--------------------------------------------------------
0000            417   ; data variables initialization
0000            418   ;--------------------------------------------------------
0000            419            rseg R_DINIT
0000            420            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            421   ;--------------------------------------------------------
0000            422   ; code
0000            423   ;--------------------------------------------------------
0000            424            rseg R_CSEG
0000            425   ;------------------------------------------------------------
0000            426   ;Allocation info for local variables in function '_c51_external_startup'
0000            427   ;------------------------------------------------------------
0000            428   ;------------------------------------------------------------
0000            429   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:16: char _c51_external_startup (void)
0000            430   ;        -----------------------------------------
0000            431   ;         function _c51_external_startup
0000            432   ;        -----------------------------------------
0000            433   __c51_external_startup:
0000            434            using   0
0000            435   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:18: PCA0MD&=(~0x40) ;    // DISABLE WDT: clear Watchdog Enable bit
0000 53D9BF     436            anl     _PCA0MD,#0xBF
0003            437   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:23: CLKSEL|=0b_0000_0010; // SYSCLK derived from the Internal High-Frequency Oscillator / 2.
0003 43A902     438            orl     _CLKSEL,#0x02
0006            439   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:29: OSCICN |= 0x03; // Configure internal oscillator for its maximum frequency
0006 43B203     440            orl     _OSCICN,#0x03
0009            441   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:32: P2MDIN &= 0b_1111_0000; // P2.0 to P2.3
0009 53F3F0     442            anl     _P2MDIN,#0xF0
000C            443   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:33: P2SKIP |= 0b_0000_1111; // Skip Crossbar decoding for these pins
000C 43D60F     444            orl     _P2SKIP,#0x0F
000F            445   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:41: AMX0P = LQFP32_MUX_P2_0; // Select positive input from P2.0
000F 75BB08     446            mov     _AMX0P,#0x08
0012            447   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:42: AMX0N = LQFP32_MUX_GND;  // GND is negative input (Single-ended Mode)
0012 75BA1F     448            mov     _AMX0N,#0x1F
0015            449   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:45: ADC0CF = 0xF8; // SAR clock = 31, Right-justified result
0015 75BCF8     450            mov     _ADC0CF,#0xF8
0018            451   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:46: ADC0CN = 0b_1000_0000; // AD0EN=1, AD0TM=0
0018 75E880     452            mov     _ADC0CN,#0x80
001B            453   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:47: REF0CN=0b_0000_1000; //Select VDD as the voltage reference for the converter
001B 75D108     454            mov     _REF0CN,#0x08
001E            455   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:49: VDM0CN=0x80;       // enable VDD monitor
001E 75FF80     456            mov     _VDM0CN,#0x80
0021            457   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:50: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
0021 75EF06     458            mov     _RSTSRC,#0x06
0024            459   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:51: P0MDOUT|=0x10;     // Enable Uart TX as push-pull output
0024 43A410     460            orl     _P0MDOUT,#0x10
0027            461   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:52: XBR0=0x01;         // Enable UART on P0.4(TX) and P0.5(RX)
0027 75E101     462            mov     _XBR0,#0x01
002A            463   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:53: XBR1=0x40;         // Enable crossbar and weak pull-ups
002A 75E240     464            mov     _XBR1,#0x40
002D            465   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:56: TH1 = 0x10000-((SYSCLK/BAUDRATE)/2L);
002D 758D98     466            mov     _TH1,#0x98
0030            467   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:57: CKCON &= ~0x0B;                  // T1M = 1; SCA1:0 = xx
0030 538EF4     468            anl     _CKCON,#0xF4
0033            469   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:58: CKCON |=  0x08;
0033 438E08     470            orl     _CKCON,#0x08
0036            471   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:72: TL1 = TH1;     // Init timer 1
0036 858D8B     472            mov     _TL1,_TH1
0039            473   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:73: TMOD &= 0x0f;  // TMOD: timer 1 in 8-bit autoreload
0039 53890F     474            anl     _TMOD,#0x0F
003C            475   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:74: TMOD |= 0x20;                       
003C 438920     476            orl     _TMOD,#0x20
003F            477   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:75: TR1 = 1;       // Start timer1
003F D28E       478            setb    _TR1
0041            479   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:76: SCON = 0x52;
0041 759852     480            mov     _SCON,#0x52
0044            481   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:78: return 0;
0044 758200     482            mov     dpl,#0x00
0047 22         483            ret
0048            484   ;------------------------------------------------------------
0048            485   ;Allocation info for local variables in function 'SYSCLK_Init'
0048            486   ;------------------------------------------------------------
0048            487   ;------------------------------------------------------------
0048            488   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:81: void SYSCLK_Init (void)
0048            489   ;        -----------------------------------------
0048            490   ;         function SYSCLK_Init
0048            491   ;        -----------------------------------------
0048            492   _SYSCLK_Init:
0048            493   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:87: CLKSEL|=0b_0000_0010; // SYSCLK derived from the Internal High-Frequency Oscillator / 2.
0048 43A902     494            orl     _CLKSEL,#0x02
004B            495   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:93: OSCICN |= 0x03;   // Configure internal oscillator for its maximum frequency
004B 43B203     496            orl     _OSCICN,#0x03
004E            497   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:94: RSTSRC  = 0x04;   // Enable missing clock detector
004E 75EF04     498            mov     _RSTSRC,#0x04
0051 22         499            ret
0052            500   ;------------------------------------------------------------
0052            501   ;Allocation info for local variables in function 'PORT_Init'
0052            502   ;------------------------------------------------------------
0052            503   ;------------------------------------------------------------
0052            504   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:97: void PORT_Init (void)
0052            505   ;        -----------------------------------------
0052            506   ;         function PORT_Init
0052            507   ;        -----------------------------------------
0052            508   _PORT_Init:
0052            509   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:99: P0MDOUT |= 0x10; // Enable UTX as push-pull output
0052 43A410     510            orl     _P0MDOUT,#0x10
0055            511   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:100: XBR0     = 0x01; // Enable UART on P0.4(TX) and P0.5(RX)                     
0055 75E101     512            mov     _XBR0,#0x01
0058            513   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:101: XBR1     = 0x40; // Enable crossbar and weak pull-ups
0058 75E240     514            mov     _XBR1,#0x40
005B 22         515            ret
005C            516   ;------------------------------------------------------------
005C            517   ;Allocation info for local variables in function 'Timer3us'
005C            518   ;------------------------------------------------------------
005C            519   ;us                        Allocated to registers r2 
005C            520   ;i                         Allocated to registers r3 
005C            521   ;------------------------------------------------------------
005C            522   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:105: void Timer3us(unsigned char us)
005C            523   ;        -----------------------------------------
005C            524   ;         function Timer3us
005C            525   ;        -----------------------------------------
005C            526   _Timer3us:
005C AA82       527            mov     r2,dpl
005E            528   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:110: CKCON|=0b_0100_0000;
005E 438E40     529            orl     _CKCON,#0x40
0061            530   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:112: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0061 7592E8     531            mov     _TMR3RL,#0xE8
0064 7593FF     532            mov     (_TMR3RL >> 8),#0xFF
0067            533   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:113: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0067 859294     534            mov     _TMR3,_TMR3RL
006A 859395     535            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
006D            536   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:115: TMR3CN = 0x04;                 // Sart Timer3 and clear overflow flag
006D 759104     537            mov     _TMR3CN,#0x04
0070            538   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:116: for (i = 0; i < us; i++)       // Count <us> overflows
0070 7B00       539            mov     r3,#0x00
0072            540   L005004?:
0072 C3         541            clr     c
0073 EB         542            mov     a,r3
0074 9A         543            subb    a,r2
0075 5001       544            jnc     L005007?
0077            545   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:118: while (!(TMR3CN & 0x80));  // Wait for overflow
0077            546   L005001?:
0077 E591       547            mov     a,_TMR3CN
0079 30E7B8     548            jnb     acc.7,L005001?
007C            549   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:119: TMR3CN &= ~(0x80);         // Clear overflow indicator
007C 53917F     550            anl     _TMR3CN,#0x7F
007F            551   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:116: for (i = 0; i < us; i++)       // Count <us> overflows
007F 0B         552            inc     r3
0080 8001       553            sjmp    L005004?
0082            554   L005007?:
0082            555   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:121: TMR3CN = 0 ;                   // Stop Timer3 and clear overflow flag
0082 759100     556            mov     _TMR3CN,#0x00
0085 22         557            ret
0086            558   ;------------------------------------------------------------
0086            559   ;Allocation info for local variables in function 'waitms'
0086            560   ;------------------------------------------------------------
0086            561   ;ms                        Allocated to registers r2 r3 
0086            562   ;j                         Allocated to registers r4 r5 
0086            563   ;k                         Allocated to registers r6 
0086            564   ;------------------------------------------------------------
0086            565   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:124: void waitms (unsigned int ms)
0086            566   ;        -----------------------------------------
0086            567   ;         function waitms
0086            568   ;        -----------------------------------------
0086            569   _waitms:
0086 AA82       570            mov     r2,dpl
0088 AB83       571            mov     r3,dph
008A            572   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:128: for(j=0; j<ms; j++)
008A 7C00       573            mov     r4,#0x00
008C 7D00       574            mov     r5,#0x00
008E            575   L006005?:
008E C3         576            clr     c
008F EC         577            mov     a,r4
0090 9A         578            subb    a,r2
0091 ED         579            mov     a,r5
0092 9B         580            subb    a,r3
0093 5001       581            jnc     L006009?
0095            582   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:129: for (k=0; k<4; k++) Timer3us(250);
0095 7E00       583            mov     r6,#0x00
0097            584   L006001?:
0097 BE0438     585            cjne    r6,#0x04,L006018?
009A            586   L006018?:
009A 5001       587            jnc     L006007?
009C 7582FA     588            mov     dpl,#0xFA
009F C002       589            push    ar2
00A1 C003       590            push    ar3
00A3 C004       591            push    ar4
00A5 C005       592            push    ar5
00A7 C006       593            push    ar6
00A9 120100     594            lcall   _Timer3us
00AC D006       595            pop     ar6
00AE D005       596            pop     ar5
00B0 D004       597            pop     ar4
00B2 D003       598            pop     ar3
00B4 D002       599            pop     ar2
00B6 0E         600            inc     r6
00B7 8001       601            sjmp    L006001?
00B9            602   L006007?:
00B9            603   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:128: for(j=0; j<ms; j++)
00B9 0C         604            inc     r4
00BA BC0078     605            cjne    r4,#0x00,L006005?
00BD 0D         606            inc     r5
00BE 8001       607            sjmp    L006005?
00C0            608   L006009?:
00C0 22         609            ret
00C1            610   ;------------------------------------------------------------
00C1            611   ;Allocation info for local variables in function 'TIMER0_Init'
00C1            612   ;------------------------------------------------------------
00C1            613   ;------------------------------------------------------------
00C1            614   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:132: void TIMER0_Init(void)
00C1            615   ;        -----------------------------------------
00C1            616   ;         function TIMER0_Init
00C1            617   ;        -----------------------------------------
00C1            618   _TIMER0_Init:
00C1            619   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:134: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
00C1 5389F0     620            anl     _TMOD,#0xF0
00C4            621   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:135: TMOD|=0b_0000_0101; // Timer/Counter 0 used as a 16-bit counter
00C4 438905     622            orl     _TMOD,#0x05
00C7            623   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:136: TR0=0; // Stop Timer/Counter 0
00C7 C28C       624            clr     _TR0
00C9 22         625            ret
00CA            626   ;------------------------------------------------------------
00CA            627   ;Allocation info for local variables in function 'UART0_Init'
00CA            628   ;------------------------------------------------------------
00CA            629   ;------------------------------------------------------------
00CA            630   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:142: void UART0_Init (void)
00CA            631   ;        -----------------------------------------
00CA            632   ;         function UART0_Init
00CA            633   ;        -----------------------------------------
00CA            634   _UART0_Init:
00CA            635   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:144: SCON0 = 0x10;
00CA 759810     636            mov     _SCON0,#0x10
00CD            637   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:147: TH1 = 0x10000-((SYSCLK/BAUDRATE)/2L);
00CD 758D98     638            mov     _TH1,#0x98
00D0            639   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:148: CKCON &= ~0x0B;                  // T1M = 1; SCA1:0 = xx
00D0 538EF4     640            anl     _CKCON,#0xF4
00D3            641   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:149: CKCON |=  0x08;
00D3 438E08     642            orl     _CKCON,#0x08
00D6            643   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:162: TL1 = TH1;      // Init Timer1
00D6 858D8B     644            mov     _TL1,_TH1
00D9            645   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:163: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit autoreload
00D9 53890F     646            anl     _TMOD,#0x0F
00DC            647   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:164: TMOD |=  0x20;                       
00DC 438920     648            orl     _TMOD,#0x20
00DF            649   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:165: TR1 = 1; // START Timer1
00DF D28E       650            setb    _TR1
00E1            651   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:166: TI = 1;  // Indicate TX0 ready
00E1 D299       652            setb    _TI
00E3 22         653            ret
00E4            654   ;------------------------------------------------------------
00E4            655   ;Allocation info for local variables in function 'main'
00E4            656   ;------------------------------------------------------------
00E4            657   ;v                         Allocated to registers r2 r3 r4 r5 
00E4            658   ;j                         Allocated to registers r6 
00E4            659   ;Period_1                  Allocated to registers 
00E4            660   ;frequency_1               Allocated with name '_main_frequency_1_1_58'
00E4            661   ;Pulse_2                   Allocated to registers 
00E4            662   ;phase_difference          Allocated with name '_main_phase_difference_1_58'
00E4            663   ;------------------------------------------------------------
00E4            664   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:169: void main (void)
00E4            665   ;        -----------------------------------------
00E4            666   ;         function main
00E4            667   ;        -----------------------------------------
00E4            668   _main:
00E4            669   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:182: TIMER0_Init();
00E4 120100     670            lcall   _TIMER0_Init
00E7            671   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:185: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
00E7 74B8       672            mov     a,#__str_0
00E9 C0E0       673            push    acc
00EB 7493       674            mov     a,#(__str_0 >> 8)
00ED C0E0       675            push    acc
00EF 7480       676            mov     a,#0x80
00F1 C0E0       677            push    acc
00F3 120100     678            lcall   _printf
00F6 1581       679            dec     sp
00F8 1581       680            dec     sp
00FA 1581       681            dec     sp
00FC            682   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:191: __FILE__, __DATE__, __TIME__);
00FC            683   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:190: "Compiled: %s, %s\n\n",
00FC 7478       684            mov     a,#__str_4
00FE C0E0       685            push    acc
0100 7494       686            mov     a,#(__str_4 >> 8)
0102 C0E0       687            push    acc
0104 7480       688            mov     a,#0x80
0106 C0E0       689            push    acc
0108 74B8       690            mov     a,#__str_3
010A C0E0       691            push    acc
010C 7494       692            mov     a,#(__str_3 >> 8)
010E C0E0       693            push    acc
0110 7480       694            mov     a,#0x80
0112 C0E0       695            push    acc
0114 74F8       696            mov     a,#__str_2
0116 C0E0       697            push    acc
0118 7494       698            mov     a,#(__str_2 >> 8)
011A C0E0       699            push    acc
011C 7480       700            mov     a,#0x80
011E C0E0       701            push    acc
0120 7438       702            mov     a,#__str_1
0122 C0E0       703            push    acc
0124 7495       704            mov     a,#(__str_1 >> 8)
0126 C0E0       705            push    acc
0128 7480       706            mov     a,#0x80
012A C0E0       707            push    acc
012C 120100     708            lcall   _printf
012F E581       709            mov     a,sp
0131 24F4       710            add     a,#0xf4
0133 F581       711            mov     sp,a
0135            712   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:196: AD0BUSY=1;
0135 D2EC       713            setb    _AD0BUSY
0137            714   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:197: while (AD0BUSY); // Wait for conversion to complete
0137            715   L009001?:
0137 20EC78     716            jb      _AD0BUSY,L009001?
013A            717   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:199: while(1)
013A            718   L009032?:
013A            719   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:201: printf("\x1B[6;1H"); // ANSI escape sequence: move to row 6, column 1
013A 74F8       720            mov     a,#__str_5
013C C0E0       721            push    acc
013E 7495       722            mov     a,#(__str_5 >> 8)
0140 C0E0       723            push    acc
0142 7480       724            mov     a,#0x80
0144 C0E0       725            push    acc
0146 120100     726            lcall   _printf
0149 1581       727            dec     sp
014B 1581       728            dec     sp
014D 1581       729            dec     sp
014F            730   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:204: TR0=0; // Stop timer 0
014F C28C       731            clr     _TR0
0151            732   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:205: TMOD=0B_0000_0001; // Set timer 0 as 16- // Set timer 0 as 16-bit timer bit timer
0151 758901     733            mov     _TMOD,#0x01
0154            734   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:206: TH0=0; TL0=0; // Reset the timer
0154 758C00     735            mov     _TH0,#0x00
0157 758A00     736            mov     _TL0,#0x00
015A            737   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:207: while (P2_5==1); // Wait for the signal to be zero
015A            738   L009004?:
015A 20A538     739            jb      _P2_5,L009004?
015D            740   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:208: while (P2_5==0); // Wait for the signal to be one
015D            741   L009007?:
015D 30A578     742            jnb     _P2_5,L009007?
0160            743   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:209: TR0=1; // Start timing
0160 D28C       744            setb    _TR0
0162            745   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:210: while (P2_5==1); // Wait for the signal to be zero
0162            746   L009010?:
0162 20A5B8     747            jb      _P2_5,L009010?
0165            748   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:211: TR0=0; // Stop timer 0
0165 C28C       749            clr     _TR0
0167            750   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:213: Period_1=(TH0*0x100+TL0)*2; // Assume Period is unsigned int 
0167 AB8C       751            mov     r3,_TH0
0169 7A00       752            mov     r2,#0x00
016B AC8A       753            mov     r4,_TL0
016D 7D00       754            mov     r5,#0x00
016F EC         755            mov     a,r4
0170 2A         756            add     a,r2
0171 FA         757            mov     r2,a
0172 ED         758            mov     a,r5
0173 3B         759            addc    a,r3
0174 8A82       760            mov     dpl,r2
0176 C582       761            xch     a,dpl
0178 25E0       762            add     a,acc
017A C582       763            xch     a,dpl
017C 33         764            rlc     a
017D F583       765            mov     dph,a
017F            766   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:214: frequency_1=1/((float)Period_1);
017F 120100     767            lcall   ___uint2fs
0182 AA82       768            mov     r2,dpl
0184 AB83       769            mov     r3,dph
0186 ACF0       770            mov     r4,b
0188 FD         771            mov     r5,a
0189 C002       772            push    ar2
018B C003       773            push    ar3
018D C004       774            push    ar4
018F C005       775            push    ar5
0191 C002       776            push    ar2
0193 C003       777            push    ar3
0195 C004       778            push    ar4
0197 C005       779            push    ar5
0199 900000     780            mov     dptr,#0x0000
019C 75F080     781            mov     b,#0x80
019F 743F       782            mov     a,#0x3F
01A1 120100     783            lcall   ___fsdiv
01A4 858228     784            mov     _main_frequency_1_1_58,dpl
01A7 858329     785            mov     (_main_frequency_1_1_58 + 1),dph
01AA 85F02A     786            mov     (_main_frequency_1_1_58 + 2),b
01AD F52B       787            mov     (_main_frequency_1_1_58 + 3),a
01AF E581       788            mov     a,sp
01B1 24FC       789            add     a,#0xfc
01B3 F581       790            mov     sp,a
01B5 D005       791            pop     ar5
01B7 D004       792            pop     ar4
01B9 D003       793            pop     ar3
01BB D002       794            pop     ar2
01BD            795   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:216: TR0=0; // Stop timer 0
01BD C28C       796            clr     _TR0
01BF            797   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:217: TMOD=0B_0000_0001; // Set timer 0 as 16- // Set timer 0 as 16-bit timer bit timer
01BF 758901     798            mov     _TMOD,#0x01
01C2            799   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:218: TH0=0; TL0=0; // Reset the timer
01C2 758C00     800            mov     _TH0,#0x00
01C5 758A00     801            mov     _TL0,#0x00
01C8            802   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:219: while (P1_4==1); // Wait for the signal to be zero
01C8            803   L009013?:
01C8 2094B8     804            jb      _P1_4,L009013?
01CB            805   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:220: while (P1_4==0); // Wait for the signal to be one
01CB            806   L009016?:
01CB 3094F8     807            jnb     _P1_4,L009016?
01CE            808   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:221: TR0=1; // Start timing
01CE D28C       809            setb    _TR0
01D0            810   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:222: while (P1_4==1); // Wait for the signal to be zero
01D0            811   L009019?:
01D0 209438     812            jb      _P1_4,L009019?
01D3            813   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:223: TR0=0; // Stop timer 0
01D3 C28C       814            clr     _TR0
01D5            815   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:225: Pulse_2=(TH0*0x100+TL0); // Assume Period is unsigned int 
01D5 AF8C       816            mov     r7,_TH0
01D7 7E00       817            mov     r6,#0x00
01D9 A88A       818            mov     r0,_TL0
01DB 7900       819            mov     r1,#0x00
01DD E8         820            mov     a,r0
01DE 2E         821            add     a,r6
01DF F582       822            mov     dpl,a
01E1 E9         823            mov     a,r1
01E2 3F         824            addc    a,r7
01E3 F583       825            mov     dph,a
01E5            826   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:228: phase_difference=((float)Pulse_2)*(360/((float)Period_1));
01E5 C002       827            push    ar2
01E7 C003       828            push    ar3
01E9 C004       829            push    ar4
01EB C005       830            push    ar5
01ED 120100     831            lcall   ___uint2fs
01F0 AE82       832            mov     r6,dpl
01F2 AF83       833            mov     r7,dph
01F4 A8F0       834            mov     r0,b
01F6 F9         835            mov     r1,a
01F7 D005       836            pop     ar5
01F9 D004       837            pop     ar4
01FB D003       838            pop     ar3
01FD D002       839            pop     ar2
01FF C006       840            push    ar6
0201 C007       841            push    ar7
0203 C000       842            push    ar0
0205 C001       843            push    ar1
0207 C002       844            push    ar2
0209 C003       845            push    ar3
020B C004       846            push    ar4
020D C005       847            push    ar5
020F 900000     848            mov     dptr,#0x0000
0212 75F0B4     849            mov     b,#0xB4
0215 7443       850            mov     a,#0x43
0217 120100     851            lcall   ___fsdiv
021A AA82       852            mov     r2,dpl
021C AB83       853            mov     r3,dph
021E ACF0       854            mov     r4,b
0220 FD         855            mov     r5,a
0221 E581       856            mov     a,sp
0223 24FC       857            add     a,#0xfc
0225 F581       858            mov     sp,a
0227 D001       859            pop     ar1
0229 D000       860            pop     ar0
022B D007       861            pop     ar7
022D D006       862            pop     ar6
022F C002       863            push    ar2
0231 C003       864            push    ar3
0233 C004       865            push    ar4
0235 C005       866            push    ar5
0237 8E82       867            mov     dpl,r6
0239 8F83       868            mov     dph,r7
023B 88F0       869            mov     b,r0
023D E9         870            mov     a,r1
023E 120100     871            lcall   ___fsmul
0241 858278     872            mov     _main_phase_difference_1_58,dpl
0244 858379     873            mov     (_main_phase_difference_1_58 + 1),dph
0247 85F07A     874            mov     (_main_phase_difference_1_58 + 2),b
024A F57B       875            mov     (_main_phase_difference_1_58 + 3),a
024C E581       876            mov     a,sp
024E 24FC       877            add     a,#0xfc
0250 F581       878            mov     sp,a
0252            879   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:230: printf("\rf=%f Hz, ",frequency_1);
0252 C028       880            push    _main_frequency_1_1_58
0254 C029       881            push    (_main_frequency_1_1_58 + 1)
0256 C02A       882            push    (_main_frequency_1_1_58 + 2)
0258 C02B       883            push    (_main_frequency_1_1_58 + 3)
025A 74B8       884            mov     a,#__str_6
025C C0E0       885            push    acc
025E 7498       886            mov     a,#(__str_6 >> 8)
0260 C0E0       887            push    acc
0262 7480       888            mov     a,#0x80
0264 C0E0       889            push    acc
0266 120100     890            lcall   _printf
0269 E581       891            mov     a,sp
026B 24F9       892            add     a,#0xf9
026D F581       893            mov     sp,a
026F            894   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:232: for(j=0; j<2; j++)
026F 7E00       895            mov     r6,#0x00
0271            896   L009034?:
0271 BE0238     897            cjne    r6,#0x02,L009068?
0274            898   L009068?:
0274 4001       899            jc      L009069?
0276 020100     900            ljmp    L009037?
0279            901   L009069?:
0279            902   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:234: AD0BUSY = 1; // Start ADC 0 conversion to measure previously selected input
0279 D2EC       903            setb    _AD0BUSY
027B            904   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:237: switch(j)
027B BE00F8     905            cjne    r6,#0x00,L009070?
027E 8001       906            sjmp    L009022?
0280            907   L009070?:
0280            908   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:239: case 0:
0280 BE0178     909            cjne    r6,#0x01,L009025?
0283 8001       910            sjmp    L009023?
0285            911   L009022?:
0285            912   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:240: AMX0P=LQFP32_MUX_P2_6;
0285 75BB0E     913            mov     _AMX0P,#0x0E
0288            914   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:241: break;
0288            915   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:242: case 1:
0288 8001       916            sjmp    L009025?
028A            917   L009023?:
028A            918   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:243: AMX0P=LQFP32_MUX_P1_5;
028A 75BB05     919            mov     _AMX0P,#0x05
028D            920   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:246: while (AD0BUSY); // Wait for conversion to complete
028D            921   L009025?:
028D 20EC78     922            jb      _AD0BUSY,L009025?
0290            923   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:247: v = ((ADC0L+(ADC0H*0x100))*VDD)/1023.0; // Read 0-1023 value in ADC0 and convert to volts
0290 AFBD       924            mov     r7,_ADC0L
0292 7800       925            mov     r0,#0x00
0294 AABE       926            mov     r2,_ADC0H
0296 E4         927            clr     a
0297 2F         928            add     a,r7
0298 F582       929            mov     dpl,a
029A EA         930            mov     a,r2
029B 38         931            addc    a,r0
029C F583       932            mov     dph,a
029E C006       933            push    ar6
02A0 120100     934            lcall   ___sint2fs
02A3 AA82       935            mov     r2,dpl
02A5 AB83       936            mov     r3,dph
02A7 ACF0       937            mov     r4,b
02A9 FD         938            mov     r5,a
02AA C002       939            push    ar2
02AC C003       940            push    ar3
02AE C004       941            push    ar4
02B0 C005       942            push    ar5
02B2 90CCCD     943            mov     dptr,#0xCCCD
02B5 75F054     944            mov     b,#0x54
02B8 7440       945            mov     a,#0x40
02BA 120100     946            lcall   ___fsmul
02BD AA82       947            mov     r2,dpl
02BF AB83       948            mov     r3,dph
02C1 ACF0       949            mov     r4,b
02C3 FD         950            mov     r5,a
02C4 E581       951            mov     a,sp
02C6 24FC       952            add     a,#0xfc
02C8 F581       953            mov     sp,a
02CA E4         954            clr     a
02CB C0E0       955            push    acc
02CD 74C0       956            mov     a,#0xC0
02CF C0E0       957            push    acc
02D1 747F       958            mov     a,#0x7F
02D3 C0E0       959            push    acc
02D5 7444       960            mov     a,#0x44
02D7 C0E0       961            push    acc
02D9 8A82       962            mov     dpl,r2
02DB 8B83       963            mov     dph,r3
02DD 8CF0       964            mov     b,r4
02DF ED         965            mov     a,r5
02E0 120100     966            lcall   ___fsdiv
02E3 AA82       967            mov     r2,dpl
02E5 AB83       968            mov     r3,dph
02E7 ACF0       969            mov     r4,b
02E9 FD         970            mov     r5,a
02EA E581       971            mov     a,sp
02EC 24FC       972            add     a,#0xfc
02EE F581       973            mov     sp,a
02F0 D006       974            pop     ar6
02F2            975   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:249: switch(j)
02F2 BE0038     976            cjne    r6,#0x00,L009073?
02F5 8001       977            sjmp    L009028?
02F7            978   L009073?:
02F7            979   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:251: case 0:
02F7 BE01B8     980            cjne    r6,#0x01,L009036?
02FA 8001       981            sjmp    L009029?
02FC            982   L009028?:
02FC            983   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:252: printf("V0=%.3fV, ", v);
02FC C006       984            push    ar6
02FE C002       985            push    ar2
0300 C003       986            push    ar3
0302 C004       987            push    ar4
0304 C005       988            push    ar5
0306 7438       989            mov     a,#__str_7
0308 C0E0       990            push    acc
030A 749C       991            mov     a,#(__str_7 >> 8)
030C C0E0       992            push    acc
030E 7480       993            mov     a,#0x80
0310 C0E0       994            push    acc
0312 120100     995            lcall   _printf
0315 E581       996            mov     a,sp
0317 24F9       997            add     a,#0xf9
0319 F581       998            mov     sp,a
031B D006       999            pop     ar6
031D           1000   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:253: break;
031D           1001   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:254: case 1:
031D 8001      1002            sjmp    L009036?
031F           1003   L009029?:
031F           1004   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:255: printf("V1=%.3fV, ", v);
031F C006      1005            push    ar6
0321 C002      1006            push    ar2
0323 C003      1007            push    ar3
0325 C004      1008            push    ar4
0327 C005      1009            push    ar5
0329 7478      1010            mov     a,#__str_8
032B C0E0      1011            push    acc
032D 749C      1012            mov     a,#(__str_8 >> 8)
032F C0E0      1013            push    acc
0331 7480      1014            mov     a,#0x80
0333 C0E0      1015            push    acc
0335 120100    1016            lcall   _printf
0338 E581      1017            mov     a,sp
033A 24F9      1018            add     a,#0xf9
033C F581      1019            mov     sp,a
033E D006      1020            pop     ar6
0340           1021   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:257: }
0340           1022   L009036?:
0340           1023   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:232: for(j=0; j<2; j++)
0340 0E        1024            inc     r6
0341 020100    1025            ljmp    L009034?
0344           1026   L009037?:
0344           1027   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:260: printf("\rphase=%f degrees",phase_difference);
0344 C078      1028            push    _main_phase_difference_1_58
0346 C079      1029            push    (_main_phase_difference_1_58 + 1)
0348 C07A      1030            push    (_main_phase_difference_1_58 + 2)
034A C07B      1031            push    (_main_phase_difference_1_58 + 3)
034C 74B8      1032            mov     a,#__str_9
034E C0E0      1033            push    acc
0350 749C      1034            mov     a,#(__str_9 >> 8)
0352 C0E0      1035            push    acc
0354 7480      1036            mov     a,#0x80
0356 C0E0      1037            push    acc
0358 120100    1038            lcall   _printf
035B E581      1039            mov     a,sp
035D 24F9      1040            add     a,#0xf9
035F F581      1041            mov     sp,a
0361           1042   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:261: printf("\x1B[K"); // ANSI escape sequence: Clear to end of line
0361 74F8      1043            mov     a,#__str_10
0363 C0E0      1044            push    acc
0365 749C      1045            mov     a,#(__str_10 >> 8)
0367 C0E0      1046            push    acc
0369 7480      1047            mov     a,#0x80
036B C0E0      1048            push    acc
036D 120100    1049            lcall   _printf
0370 1581      1050            dec     sp
0372 1581      1051            dec     sp
0374 1581      1052            dec     sp
0376           1053   ;        C:\Users\jeffreyliou\Desktop\elec291\lab5\C851F38x_ADC_multiple_inputs.c:262: waitms(100);  // Wait 100ms before next round of measurements.
0376 900064    1054            mov     dptr,#0x0064
0379 120100    1055            lcall   _waitms
037C 020100    1056            ljmp    L009032?
037F           1057            rseg R_CSEG
037F           1058   
0000           1059            rseg R_XINIT
0000           1060   
0000           1061            rseg R_CONST
0000           1062   __str_0:
0000 1B        1063            db 0x1B
0001 5B324A    1064            db '[2J'
0004 00        1065            db 0x00
0005           1066   __str_1:
0005 50686173  1067            db 'Phasor Test Program'
     6F722054
     65737420
     50726F67
     72616D
0018 0A        1068            db 0x0A
0019 4170706C  1069            db 'Apply analog voltages to P2.0, P2.1, P2.'
     7920616E
     616C6F67
     20766F6C
     74616765
     7320746F
     2050322E
     302C2050
     322E312C
     2050322E
0041 322C2061  1070            db '2, and P2.3'
     6E642050
     322E33
004C 0A        1071            db 0x0A
004D 46696C65  1072            db 'File: %s'
     3A202573
0055 0A        1073            db 0x0A
0056 436F6D70  1074            db 'Compiled: %s, %s'
     696C6564
     3A202573
     2C202573
0066 0A        1075            db 0x0A
0067 0A        1076            db 0x0A
0068 00        1077            db 0x00
0069           1078   __str_2:
0069 433A      1079            db 'C:'
006B 5C        1080            db 0x5C
006C 55736572  1081            db 'Users'
     73
0071 5C        1082            db 0x5C
0072 6A656666  1083            db 'jeffreyliou'
     7265796C
     696F75
007D 5C        1084            db 0x5C
007E 4465736B  1085            db 'Desktop'
     746F70
0085 5C        1086            db 0x5C
0086 656C6563  1087            db 'elec291'
     323931
008D 5C        1088            db 0x5C
008E 6C616235  1089            db 'lab5'
0092 5C        1090            db 0x5C
0093 43383531  1091            db 'C851F38x_ADC_multi'
     46333878
     5F414443
     5F6D756C
     7469
00A5 706C655F  1092            db 'ple_inputs.c'
     696E7075
     74732E63
00B1 00        1093            db 0x00
00B2           1094   __str_3:
00B2 4D617220  1095            db 'Mar  6 2016'
     20362032
     303136
00BD 00        1096            db 0x00
00BE           1097   __str_4:
00BE 31373A32  1098            db '17:23:20'
     333A3230
00C6 00        1099            db 0x00
00C7           1100   __str_5:
00C7 1B        1101            db 0x1B
00C8 5B363B31  1102            db '[6;1H'
     48
00CD 00        1103            db 0x00
00CE           1104   __str_6:
00CE 0D        1105            db 0x0D
00CF 663D2566  1106            db 'f=%f Hz, '
     20487A2C
     20
00D8 00        1107            db 0x00
00D9           1108   __str_7:
00D9 56303D25  1109            db 'V0=%.3fV, '
     2E336656
     2C20
00E3 00        1110            db 0x00
00E4           1111   __str_8:
00E4 56313D25  1112            db 'V1=%.3fV, '
     2E336656
     2C20
00EE 00        1113            db 0x00
00EF           1114   __str_9:
00EF 0D        1115            db 0x0D
00F0 70686173  1116            db 'phase=%f degrees'
     653D2566
     20646567
     72656573
0100 00        1117            db 0x00
0101           1118   __str_10:
0101 1B        1119            db 0x1B
0102 5B4B      1120            db '[K'
0104 00        1121            db 0x00
0105           1122   
0003           1123            CSEG
0003           1124   
0003           1125   end
