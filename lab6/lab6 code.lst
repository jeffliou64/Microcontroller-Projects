0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Tue Mar 15 11:58:54 2016
0000              5   ;--------------------------------------------------------
                  5   $name lab6_code
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _Volts_at_Pin
0000             30            public _ADC_at_Pin
0000             31            public _InitPinADC
0000             32            public _InitADC
0000             33            public _Timer2_ISR
0000             34            public __c51_external_startup
0000             35            public _DRV
0000             36            public _PWM_2
0000             37            public _PWM_1
0000             38            public _proceed
0000             39            public _pwm_count
0000             40   ;--------------------------------------------------------
0000             41   ; Special Function Registers
0000             42   ;--------------------------------------------------------
0000             43   _P0             DATA 0x80
0000             44   _SP             DATA 0x81
0000             45   _DPL            DATA 0x82
0000             46   _DPH            DATA 0x83
0000             47   _EMI0TC         DATA 0x84
0000             48   _EMI0CF         DATA 0x85
0000             49   _OSCLCN         DATA 0x86
0000             50   _PCON           DATA 0x87
0000             51   _TCON           DATA 0x88
0000             52   _TMOD           DATA 0x89
0000             53   _TL0            DATA 0x8a
0000             54   _TL1            DATA 0x8b
0000             55   _TH0            DATA 0x8c
0000             56   _TH1            DATA 0x8d
0000             57   _CKCON          DATA 0x8e
0000             58   _PSCTL          DATA 0x8f
0000             59   _P1             DATA 0x90
0000             60   _TMR3CN         DATA 0x91
0000             61   _TMR4CN         DATA 0x91
0000             62   _TMR3RLL        DATA 0x92
0000             63   _TMR4RLL        DATA 0x92
0000             64   _TMR3RLH        DATA 0x93
0000             65   _TMR4RLH        DATA 0x93
0000             66   _TMR3L          DATA 0x94
0000             67   _TMR4L          DATA 0x94
0000             68   _TMR3H          DATA 0x95
0000             69   _TMR4H          DATA 0x95
0000             70   _USB0ADR        DATA 0x96
0000             71   _USB0DAT        DATA 0x97
0000             72   _SCON           DATA 0x98
0000             73   _SCON0          DATA 0x98
0000             74   _SBUF           DATA 0x99
0000             75   _SBUF0          DATA 0x99
0000             76   _CPT1CN         DATA 0x9a
0000             77   _CPT0CN         DATA 0x9b
0000             78   _CPT1MD         DATA 0x9c
0000             79   _CPT0MD         DATA 0x9d
0000             80   _CPT1MX         DATA 0x9e
0000             81   _CPT0MX         DATA 0x9f
0000             82   _P2             DATA 0xa0
0000             83   _SPI0CFG        DATA 0xa1
0000             84   _SPI0CKR        DATA 0xa2
0000             85   _SPI0DAT        DATA 0xa3
0000             86   _P0MDOUT        DATA 0xa4
0000             87   _P1MDOUT        DATA 0xa5
0000             88   _P2MDOUT        DATA 0xa6
0000             89   _P3MDOUT        DATA 0xa7
0000             90   _IE             DATA 0xa8
0000             91   _CLKSEL         DATA 0xa9
0000             92   _EMI0CN         DATA 0xaa
0000             93   __XPAGE         DATA 0xaa
0000             94   _SBCON1         DATA 0xac
0000             95   _P4MDOUT        DATA 0xae
0000             96   _PFE0CN         DATA 0xaf
0000             97   _P3             DATA 0xb0
0000             98   _OSCXCN         DATA 0xb1
0000             99   _OSCICN         DATA 0xb2
0000            100   _OSCICL         DATA 0xb3
0000            101   _SBRLL1         DATA 0xb4
0000            102   _SBRLH1         DATA 0xb5
0000            103   _FLSCL          DATA 0xb6
0000            104   _FLKEY          DATA 0xb7
0000            105   _IP             DATA 0xb8
0000            106   _CLKMUL         DATA 0xb9
0000            107   _SMBTC          DATA 0xb9
0000            108   _AMX0N          DATA 0xba
0000            109   _AMX0P          DATA 0xbb
0000            110   _ADC0CF         DATA 0xbc
0000            111   _ADC0L          DATA 0xbd
0000            112   _ADC0H          DATA 0xbe
0000            113   _SFRPAGE        DATA 0xbf
0000            114   _SMB0CN         DATA 0xc0
0000            115   _SMB1CN         DATA 0xc0
0000            116   _SMB0CF         DATA 0xc1
0000            117   _SMB1CF         DATA 0xc1
0000            118   _SMB0DAT        DATA 0xc2
0000            119   _SMB1DAT        DATA 0xc2
0000            120   _ADC0GTL        DATA 0xc3
0000            121   _ADC0GTH        DATA 0xc4
0000            122   _ADC0LTL        DATA 0xc5
0000            123   _ADC0LTH        DATA 0xc6
0000            124   _P4             DATA 0xc7
0000            125   _TMR2CN         DATA 0xc8
0000            126   _TMR5CN         DATA 0xc8
0000            127   _REG01CN        DATA 0xc9
0000            128   _TMR2RLL        DATA 0xca
0000            129   _TMR5RLL        DATA 0xca
0000            130   _TMR2RLH        DATA 0xcb
0000            131   _TMR5RLH        DATA 0xcb
0000            132   _TMR2L          DATA 0xcc
0000            133   _TMR5L          DATA 0xcc
0000            134   _TMR2H          DATA 0xcd
0000            135   _TMR5H          DATA 0xcd
0000            136   _SMB0ADM        DATA 0xce
0000            137   _SMB1ADM        DATA 0xce
0000            138   _SMB0ADR        DATA 0xcf
0000            139   _SMB1ADR        DATA 0xcf
0000            140   _PSW            DATA 0xd0
0000            141   _REF0CN         DATA 0xd1
0000            142   _SCON1          DATA 0xd2
0000            143   _SBUF1          DATA 0xd3
0000            144   _P0SKIP         DATA 0xd4
0000            145   _P1SKIP         DATA 0xd5
0000            146   _P2SKIP         DATA 0xd6
0000            147   _USB0XCN        DATA 0xd7
0000            148   _PCA0CN         DATA 0xd8
0000            149   _PCA0MD         DATA 0xd9
0000            150   _PCA0CPM0       DATA 0xda
0000            151   _PCA0CPM1       DATA 0xdb
0000            152   _PCA0CPM2       DATA 0xdc
0000            153   _PCA0CPM3       DATA 0xdd
0000            154   _PCA0CPM4       DATA 0xde
0000            155   _P3SKIP         DATA 0xdf
0000            156   _ACC            DATA 0xe0
0000            157   _XBR0           DATA 0xe1
0000            158   _XBR1           DATA 0xe2
0000            159   _XBR2           DATA 0xe3
0000            160   _IT01CF         DATA 0xe4
0000            161   _CKCON1         DATA 0xe4
0000            162   _SMOD1          DATA 0xe5
0000            163   _EIE1           DATA 0xe6
0000            164   _EIE2           DATA 0xe7
0000            165   _ADC0CN         DATA 0xe8
0000            166   _PCA0CPL1       DATA 0xe9
0000            167   _PCA0CPH1       DATA 0xea
0000            168   _PCA0CPL2       DATA 0xeb
0000            169   _PCA0CPH2       DATA 0xec
0000            170   _PCA0CPL3       DATA 0xed
0000            171   _PCA0CPH3       DATA 0xee
0000            172   _RSTSRC         DATA 0xef
0000            173   _B              DATA 0xf0
0000            174   _P0MDIN         DATA 0xf1
0000            175   _P1MDIN         DATA 0xf2
0000            176   _P2MDIN         DATA 0xf3
0000            177   _P3MDIN         DATA 0xf4
0000            178   _P4MDIN         DATA 0xf5
0000            179   _EIP1           DATA 0xf6
0000            180   _EIP2           DATA 0xf7
0000            181   _SPI0CN         DATA 0xf8
0000            182   _PCA0L          DATA 0xf9
0000            183   _PCA0H          DATA 0xfa
0000            184   _PCA0CPL0       DATA 0xfb
0000            185   _PCA0CPH0       DATA 0xfc
0000            186   _PCA0CPL4       DATA 0xfd
0000            187   _PCA0CPH4       DATA 0xfe
0000            188   _VDM0CN         DATA 0xff
0000            189   _DPTR           DATA 0x8382
0000            190   _TMR2RL         DATA 0xcbca
0000            191   _TMR3RL         DATA 0x9392
0000            192   _TMR4RL         DATA 0x9392
0000            193   _TMR5RL         DATA 0xcbca
0000            194   _TMR2           DATA 0xcdcc
0000            195   _TMR3           DATA 0x9594
0000            196   _TMR4           DATA 0x9594
0000            197   _TMR5           DATA 0xcdcc
0000            198   _SBRL1          DATA 0xb5b4
0000            199   _ADC0           DATA 0xbebd
0000            200   _ADC0GT         DATA 0xc4c3
0000            201   _ADC0LT         DATA 0xc6c5
0000            202   _PCA0           DATA 0xfaf9
0000            203   _PCA0CP1        DATA 0xeae9
0000            204   _PCA0CP2        DATA 0xeceb
0000            205   _PCA0CP3        DATA 0xeeed
0000            206   _PCA0CP0        DATA 0xfcfb
0000            207   _PCA0CP4        DATA 0xfefd
0000            208   ;--------------------------------------------------------
0000            209   ; special function bits
0000            210   ;--------------------------------------------------------
0000            211   _P0_0           BIT 0x80
0000            212   _P0_1           BIT 0x81
0000            213   _P0_2           BIT 0x82
0000            214   _P0_3           BIT 0x83
0000            215   _P0_4           BIT 0x84
0000            216   _P0_5           BIT 0x85
0000            217   _P0_6           BIT 0x86
0000            218   _P0_7           BIT 0x87
0000            219   _TF1            BIT 0x8f
0000            220   _TR1            BIT 0x8e
0000            221   _TF0            BIT 0x8d
0000            222   _TR0            BIT 0x8c
0000            223   _IE1            BIT 0x8b
0000            224   _IT1            BIT 0x8a
0000            225   _IE0            BIT 0x89
0000            226   _IT0            BIT 0x88
0000            227   _P1_0           BIT 0x90
0000            228   _P1_1           BIT 0x91
0000            229   _P1_2           BIT 0x92
0000            230   _P1_3           BIT 0x93
0000            231   _P1_4           BIT 0x94
0000            232   _P1_5           BIT 0x95
0000            233   _P1_6           BIT 0x96
0000            234   _P1_7           BIT 0x97
0000            235   _S0MODE         BIT 0x9f
0000            236   _SCON0_6        BIT 0x9e
0000            237   _MCE0           BIT 0x9d
0000            238   _REN0           BIT 0x9c
0000            239   _TB80           BIT 0x9b
0000            240   _RB80           BIT 0x9a
0000            241   _TI0            BIT 0x99
0000            242   _RI0            BIT 0x98
0000            243   _SCON_6         BIT 0x9e
0000            244   _MCE            BIT 0x9d
0000            245   _REN            BIT 0x9c
0000            246   _TB8            BIT 0x9b
0000            247   _RB8            BIT 0x9a
0000            248   _TI             BIT 0x99
0000            249   _RI             BIT 0x98
0000            250   _P2_0           BIT 0xa0
0000            251   _P2_1           BIT 0xa1
0000            252   _P2_2           BIT 0xa2
0000            253   _P2_3           BIT 0xa3
0000            254   _P2_4           BIT 0xa4
0000            255   _P2_5           BIT 0xa5
0000            256   _P2_6           BIT 0xa6
0000            257   _P2_7           BIT 0xa7
0000            258   _EA             BIT 0xaf
0000            259   _ESPI0          BIT 0xae
0000            260   _ET2            BIT 0xad
0000            261   _ES0            BIT 0xac
0000            262   _ET1            BIT 0xab
0000            263   _EX1            BIT 0xaa
0000            264   _ET0            BIT 0xa9
0000            265   _EX0            BIT 0xa8
0000            266   _P3_0           BIT 0xb0
0000            267   _P3_1           BIT 0xb1
0000            268   _P3_2           BIT 0xb2
0000            269   _P3_3           BIT 0xb3
0000            270   _P3_4           BIT 0xb4
0000            271   _P3_5           BIT 0xb5
0000            272   _P3_6           BIT 0xb6
0000            273   _P3_7           BIT 0xb7
0000            274   _IP_7           BIT 0xbf
0000            275   _PSPI0          BIT 0xbe
0000            276   _PT2            BIT 0xbd
0000            277   _PS0            BIT 0xbc
0000            278   _PT1            BIT 0xbb
0000            279   _PX1            BIT 0xba
0000            280   _PT0            BIT 0xb9
0000            281   _PX0            BIT 0xb8
0000            282   _MASTER0        BIT 0xc7
0000            283   _TXMODE0        BIT 0xc6
0000            284   _STA0           BIT 0xc5
0000            285   _STO0           BIT 0xc4
0000            286   _ACKRQ0         BIT 0xc3
0000            287   _ARBLOST0       BIT 0xc2
0000            288   _ACK0           BIT 0xc1
0000            289   _SI0            BIT 0xc0
0000            290   _MASTER1        BIT 0xc7
0000            291   _TXMODE1        BIT 0xc6
0000            292   _STA1           BIT 0xc5
0000            293   _STO1           BIT 0xc4
0000            294   _ACKRQ1         BIT 0xc3
0000            295   _ARBLOST1       BIT 0xc2
0000            296   _ACK1           BIT 0xc1
0000            297   _SI1            BIT 0xc0
0000            298   _TF2            BIT 0xcf
0000            299   _TF2H           BIT 0xcf
0000            300   _TF2L           BIT 0xce
0000            301   _TF2LEN         BIT 0xcd
0000            302   _TF2CEN         BIT 0xcc
0000            303   _T2SPLIT        BIT 0xcb
0000            304   _TR2            BIT 0xca
0000            305   _T2CSS          BIT 0xc9
0000            306   _T2XCLK         BIT 0xc8
0000            307   _TF5H           BIT 0xcf
0000            308   _TF5L           BIT 0xce
0000            309   _TF5LEN         BIT 0xcd
0000            310   _TMR5CN_4       BIT 0xcc
0000            311   _T5SPLIT        BIT 0xcb
0000            312   _TR5            BIT 0xca
0000            313   _TMR5CN_1       BIT 0xc9
0000            314   _T5XCLK         BIT 0xc8
0000            315   _CY             BIT 0xd7
0000            316   _AC             BIT 0xd6
0000            317   _F0             BIT 0xd5
0000            318   _RS1            BIT 0xd4
0000            319   _RS0            BIT 0xd3
0000            320   _OV             BIT 0xd2
0000            321   _F1             BIT 0xd1
0000            322   _PARITY         BIT 0xd0
0000            323   _CF             BIT 0xdf
0000            324   _CR             BIT 0xde
0000            325   _PCA0CN_5       BIT 0xde
0000            326   _CCF4           BIT 0xdc
0000            327   _CCF3           BIT 0xdb
0000            328   _CCF2           BIT 0xda
0000            329   _CCF1           BIT 0xd9
0000            330   _CCF0           BIT 0xd8
0000            331   _ACC_7          BIT 0xe7
0000            332   _ACC_6          BIT 0xe6
0000            333   _ACC_5          BIT 0xe5
0000            334   _ACC_4          BIT 0xe4
0000            335   _ACC_3          BIT 0xe3
0000            336   _ACC_2          BIT 0xe2
0000            337   _ACC_1          BIT 0xe1
0000            338   _ACC_0          BIT 0xe0
0000            339   _AD0EN          BIT 0xef
0000            340   _AD0TM          BIT 0xee
0000            341   _AD0INT         BIT 0xed
0000            342   _AD0BUSY        BIT 0xec
0000            343   _AD0WINT        BIT 0xeb
0000            344   _AD0CM2         BIT 0xea
0000            345   _AD0CM1         BIT 0xe9
0000            346   _AD0CM0         BIT 0xe8
0000            347   _B_7            BIT 0xf7
0000            348   _B_6            BIT 0xf6
0000            349   _B_5            BIT 0xf5
0000            350   _B_4            BIT 0xf4
0000            351   _B_3            BIT 0xf3
0000            352   _B_2            BIT 0xf2
0000            353   _B_1            BIT 0xf1
0000            354   _B_0            BIT 0xf0
0000            355   _SPIF           BIT 0xff
0000            356   _WCOL           BIT 0xfe
0000            357   _MODF           BIT 0xfd
0000            358   _RXOVRN         BIT 0xfc
0000            359   _NSSMD1         BIT 0xfb
0000            360   _NSSMD0         BIT 0xfa
0000            361   _TXBMT          BIT 0xf9
0000            362   _SPIEN          BIT 0xf8
0000            363   ;--------------------------------------------------------
0000            364   ; overlayable register banks
0000            365   ;--------------------------------------------------------
0000            366            rbank0 segment data overlay
0000            367   ;--------------------------------------------------------
0000            368   ; internal ram data
0000            369   ;--------------------------------------------------------
0000            370            rseg R_DSEG
0000            371   _pwm_count:
0000            372            ds 1
0001            373   _proceed:
0001            374            ds 1
0002            375   _PWM_1:
0002            376            ds 2
0004            377   _PWM_2:
0004            378            ds 2
0006            379   _DRV:
0006            380            ds 2
0008            381   _main_selection_1_56:
0008            382            ds 2
000A            383   _main_voltage_1_56:
000A            384            ds 4
000E            385   ;--------------------------------------------------------
000E            386   ; overlayable items in internal ram 
000E            387   ;--------------------------------------------------------
0000            388            rseg    R_OSEG
0000            389   _InitPinADC_PARM_2:
0000            390            ds 1
0001            391            rseg    R_OSEG
0001            392   ;--------------------------------------------------------
0001            393   ; indirectly addressable internal ram data
0001            394   ;--------------------------------------------------------
0000            395            rseg R_ISEG
0000            396   ;--------------------------------------------------------
0000            397   ; absolute internal ram data
0000            398   ;--------------------------------------------------------
0000            399            DSEG
0000            400   ;--------------------------------------------------------
0000            401   ; bit data
0000            402   ;--------------------------------------------------------
0000            403            rseg R_BSEG
0000            404   _Timer2_ISR_sloc0_1_0:
0000            405            DBIT    1
0001            406   ;--------------------------------------------------------
0001            407   ; paged external ram data
0001            408   ;--------------------------------------------------------
0000            409            rseg R_PSEG
0000            410   ;--------------------------------------------------------
0000            411   ; external ram data
0000            412   ;--------------------------------------------------------
0000            413            rseg R_XSEG
0000            414   ;--------------------------------------------------------
0000            415   ; absolute external ram data
0000            416   ;--------------------------------------------------------
0000            417            XSEG
0000            418   ;--------------------------------------------------------
0000            419   ; external initialized ram data
0000            420   ;--------------------------------------------------------
0000            421            rseg R_IXSEG
0000            422            rseg R_HOME
0000            423            rseg R_GSINIT
0000            424            rseg R_CSEG
0000            425   ;--------------------------------------------------------
0000            426   ; Reset entry point and interrupt vectors
0000            427   ;--------------------------------------------------------
0000            428            CSEG at 0x0000
0000 020100     429            ljmp    _crt0
002B            430            CSEG at 0x002b
002B 020100     431            ljmp    _Timer2_ISR
002E            432   ;--------------------------------------------------------
002E            433   ; global & static initialisations
002E            434   ;--------------------------------------------------------
0000            435            rseg R_HOME
0000            436            rseg R_GSINIT
0000            437            rseg R_GSINIT
0000            438   ;--------------------------------------------------------
0000            439   ; data variables initialization
0000            440   ;--------------------------------------------------------
0000            441            rseg R_DINIT
0000            442   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:22: volatile unsigned char pwm_count=0;
0000 75A000     443            mov     _pwm_count,#0x00
0003            444   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:24: volatile unsigned int PWM_1=0;
0003 E4         445            clr     a
0004 F500       446            mov     _PWM_1,a
0006 F501       447            mov     (_PWM_1 + 1),a
0008            448   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:25: volatile unsigned int PWM_2=0;
0008 E4         449            clr     a
0009 F5C0       450            mov     _PWM_2,a
000B F5C1       451            mov     (_PWM_2 + 1),a
000D            452   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:26: volatile int DRV = 0;
000D E4         453            clr     a
000E F580       454            mov     _DRV,a
0010 F581       455            mov     (_DRV + 1),a
0012            456            ; The linker places a 'ret' at the end of segment R_DINIT.
0012            457   ;--------------------------------------------------------
0012            458   ; code
0012            459   ;--------------------------------------------------------
0000            460            rseg R_CSEG
0000            461   ;------------------------------------------------------------
0000            462   ;Allocation info for local variables in function '_c51_external_startup'
0000            463   ;------------------------------------------------------------
0000            464   ;------------------------------------------------------------
0000            465   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:29: char _c51_external_startup (void)
0000            466   ;        -----------------------------------------
0000            467   ;         function _c51_external_startup
0000            468   ;        -----------------------------------------
0000            469   __c51_external_startup:
0000            470            using   0
0000            471   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:31: PCA0MD&=(~0x40) ;    // DISABLE WDT: clear Watchdog Enable bit
0000 53D9BF     472            anl     _PCA0MD,#0xBF
0003            473   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:32: VDM0CN=0x80; // enable VDD monitor
0003 75FF80     474            mov     _VDM0CN,#0x80
0006            475   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:33: RSTSRC=0x02|0x04; // Enable reset on missing clock detector and VDD
0006 75EF06     476            mov     _RSTSRC,#0x06
0009            477   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:41: CLKSEL|=0b_0000_0011; // SYSCLK derived from the Internal High-Frequency Oscillator / 1.
0009 43A903     478            orl     _CLKSEL,#0x03
000C            479   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:45: OSCICN |= 0x03; // Configure internal oscillator for its maximum frequency
000C 43B203     480            orl     _OSCICN,#0x03
000F            481   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:48: SCON0 = 0x10; 
000F 759810     482            mov     _SCON0,#0x10
0012            483   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:50: TH1 = 0x10000-((SYSCLK/BAUDRATE)/2L);
0012 758D30     484            mov     _TH1,#0x30
0015            485   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:51: CKCON &= ~0x0B;                  // T1M = 1; SCA1:0 = xx
0015 538EF4     486            anl     _CKCON,#0xF4
0018            487   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:52: CKCON |=  0x08;
0018 438E08     488            orl     _CKCON,#0x08
001B            489   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:65: TL1 = TH1;      // Init Timer1
001B 858D8B     490            mov     _TL1,_TH1
001E            491   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:66: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit autoreload
001E 53890F     492            anl     _TMOD,#0x0F
0021            493   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:67: TMOD |=  0x20;                       
0021 438920     494            orl     _TMOD,#0x20
0024            495   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:68: TR1 = 1; // START Timer1
0024 D28E       496            setb    _TR1
0026            497   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:69: TI = 1;  // Indicate TX0 ready
0026 D299       498            setb    _TI
0028            499   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:72: P2MDOUT|=0b_0000_0011;
0028 43A603     500            orl     _P2MDOUT,#0x03
002B            501   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:73: P0MDOUT |= 0x10; // Enable UTX as push-pull output
002B 43A410     502            orl     _P0MDOUT,#0x10
002E            503   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:74: XBR0     = 0x01; // Enable UART on P0.4(TX) and P0.5(RX)                     
002E 75E101     504            mov     _XBR0,#0x01
0031            505   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:75: XBR1     = 0x40; // Enable crossbar and weak pull-ups
0031 75E240     506            mov     _XBR1,#0x40
0034            507   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:78: TMR2CN=0x00;   // Stop Timer2; Clear TF2;
0034 75C800     508            mov     _TMR2CN,#0x00
0037            509   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:79: CKCON|=0b_0001_0000;
0037 438E10     510            orl     _CKCON,#0x10
003A            511   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:80: TMR2RL=(-(SYSCLK/(2*48))/(100L)); // Initialize reload value
003A 75CA78     512            mov     _TMR2RL,#0x78
003D 75CBEC     513            mov     (_TMR2RL >> 8),#0xEC
0040            514   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:81: TMR2=0xffff;   // Set to reload immediately
0040 75CCFF     515            mov     _TMR2,#0xFF
0043 75CDFF     516            mov     (_TMR2 >> 8),#0xFF
0046            517   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:82: ET2=1;         // Enable Timer2 interrupts
0046 D2AD       518            setb    _ET2
0048            519   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:83: TR2=1;         // Start Timer2
0048 D2CA       520            setb    _TR2
004A            521   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:85: EA=1; // Enable interrupts
004A D2AF       522            setb    _EA
004C            523   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:87: return 0;
004C 758200     524            mov     dpl,#0x00
004F 22         525            ret
0050            526   ;------------------------------------------------------------
0050            527   ;Allocation info for local variables in function 'Timer2_ISR'
0050            528   ;------------------------------------------------------------
0050            529   ;------------------------------------------------------------
0050            530   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:91: void Timer2_ISR (void) interrupt 5
0050            531   ;        -----------------------------------------
0050            532   ;         function Timer2_ISR
0050            533   ;        -----------------------------------------
0050            534   _Timer2_ISR:
0050 C0E0       535            push    acc
0052 C002       536            push    ar2
0054 C003       537            push    ar3
0056 C0D0       538            push    psw
0058 75D000     539            mov     psw,#0x00
005B            540   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:93: TF2H = 0; // Clear Timer2 interrupt flag
005B C2CF       541            clr     _TF2H
005D            542   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:95: pwm_count++;
005D 05A0       543            inc     _pwm_count
005F            544   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:96: if(pwm_count>100) pwm_count=0;
005F E5A0       545            mov     a,_pwm_count
0061 249B       546            add     a,#0xff - 0x64
0063 5001       547            jnc     L003002?
0065 75A000     548            mov     _pwm_count,#0x00
0068            549   L003002?:
0068            550   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:98: OUT0=pwm_count>PWM_1?0:1;
0068 AAA0       551            mov     r2,_pwm_count
006A 7B00       552            mov     r3,#0x00
006C C3         553            clr     c
006D E500       554            mov     a,_PWM_1
006F 9A         555            subb    a,r2
0070 E501       556            mov     a,(_PWM_1 + 1)
0072 9B         557            subb    a,r3
0073 9218       558            mov  _Timer2_ISR_sloc0_1_0,c
0075 B3         559            cpl     c
0076 92A0       560            mov     _P2_0,c
0078            561   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:99: OUT1=pwm_count>PWM_2?0:1;
0078 AAA0       562            mov     r2,_pwm_count
007A 7B00       563            mov     r3,#0x00
007C C3         564            clr     c
007D E5C0       565            mov     a,_PWM_2
007F 9A         566            subb    a,r2
0080 E5C1       567            mov     a,(_PWM_2 + 1)
0082 9B         568            subb    a,r3
0083 9218       569            mov  _Timer2_ISR_sloc0_1_0,c
0085 B3         570            cpl     c
0086 92A1       571            mov     _P2_1,c
0088 D0D0       572            pop     psw
008A D003       573            pop     ar3
008C D002       574            pop     ar2
008E D0E0       575            pop     acc
0090 32         576            reti
0091            577   ;        eliminated unneeded push/pop dpl
0091            578   ;        eliminated unneeded push/pop dph
0091            579   ;        eliminated unneeded push/pop b
0091            580   ;------------------------------------------------------------
0091            581   ;Allocation info for local variables in function 'InitADC'
0091            582   ;------------------------------------------------------------
0091            583   ;------------------------------------------------------------
0091            584   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:102: void InitADC (void)
0091            585   ;        -----------------------------------------
0091            586   ;         function InitADC
0091            587   ;        -----------------------------------------
0091            588   _InitADC:
0091            589   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:105: ADC0CF = 0xF8; // SAR clock = 31, Right-justified result
0091 75BCF8     590            mov     _ADC0CF,#0xF8
0094            591   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:106: ADC0CN = 0b_1000_0000; // AD0EN=1, AD0TM=0
0094 75E880     592            mov     _ADC0CN,#0x80
0097            593   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:107: REF0CN = 0b_0000_1000; //Select VDD as the voltage reference for the converter
0097 75D108     594            mov     _REF0CN,#0x08
009A 22         595            ret
009B            596   ;------------------------------------------------------------
009B            597   ;Allocation info for local variables in function 'InitPinADC'
009B            598   ;------------------------------------------------------------
009B            599   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
009B            600   ;portno                    Allocated to registers r2 
009B            601   ;mask                      Allocated to registers r3 
009B            602   ;------------------------------------------------------------
009B            603   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:110: void InitPinADC (unsigned char portno, unsigned char pinno)
009B            604   ;        -----------------------------------------
009B            605   ;         function InitPinADC
009B            606   ;        -----------------------------------------
009B            607   _InitPinADC:
009B AA82       608            mov     r2,dpl
009D            609   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:114: mask=1<<pinno;
009D 8570F0     610            mov     b,_InitPinADC_PARM_2
00A0 05F0       611            inc     b
00A2 7401       612            mov     a,#0x01
00A4 8001       613            sjmp    L005012?
00A6            614   L005010?:
00A6 25E0       615            add     a,acc
00A8            616   L005012?:
00A8 D5F018     617            djnz    b,L005010?
00AB FB         618            mov     r3,a
00AC            619   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:116: switch (portno)
00AC EA         620            mov     a,r2
00AD 24FC       621            add     a,#0xff - 0x03
00AF 4001       622            jc      L005007?
00B1 EA         623            mov     a,r2
00B2 2A         624            add     a,r2
00B3 2A         625            add     a,r2
00B4 909498     626            mov     dptr,#L005014?
00B7 73         627            jmp     @a+dptr
00B8            628   L005014?:
00B8 020100     629            ljmp    L005001?
00BB 020100     630            ljmp    L005002?
00BE 020100     631            ljmp    L005003?
00C1 020100     632            ljmp    L005004?
00C4            633   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:118: case 0:
00C4            634   L005001?:
00C4            635   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:119: P0MDIN &= (~mask); // Set pin as analog input
00C4 EB         636            mov     a,r3
00C5 F4         637            cpl     a
00C6 52F1       638            anl     _P0MDIN,a
00C8            639   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:120: P0SKIP |= mask; // Skip Crossbar decoding for this pin
00C8 EB         640            mov     a,r3
00C9 42D4       641            orl     _P0SKIP,a
00CB            642   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:121: break;
00CB            643   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:122: case 1:
00CB 22         644            ret
00CC            645   L005002?:
00CC            646   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:123: P1MDIN &= (~mask); // Set pin as analog input
00CC EB         647            mov     a,r3
00CD F4         648            cpl     a
00CE 52F2       649            anl     _P1MDIN,a
00D0            650   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:124: P1SKIP |= mask; // Skip Crossbar decoding for this pin
00D0 EB         651            mov     a,r3
00D1 42D5       652            orl     _P1SKIP,a
00D3            653   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:125: break;
00D3            654   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:126: case 2:
00D3 22         655            ret
00D4            656   L005003?:
00D4            657   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:127: P2MDIN &= (~mask); // Set pin as analog input
00D4 EB         658            mov     a,r3
00D5 F4         659            cpl     a
00D6 52F3       660            anl     _P2MDIN,a
00D8            661   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:128: P2SKIP |= mask; // Skip Crossbar decoding for this pin
00D8 EB         662            mov     a,r3
00D9 42D6       663            orl     _P2SKIP,a
00DB            664   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:129: break;
00DB            665   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:130: case 3:
00DB 22         666            ret
00DC            667   L005004?:
00DC            668   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:131: P3MDIN &= (~mask); // Set pin as analog input
00DC EB         669            mov     a,r3
00DD F4         670            cpl     a
00DE FA         671            mov     r2,a
00DF 52F4       672            anl     _P3MDIN,a
00E1            673   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:132: P3SKIP |= mask; // Skip Crossbar decoding for this pin
00E1 EB         674            mov     a,r3
00E2 42DF       675            orl     _P3SKIP,a
00E4            676   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:136: }
00E4            677   L005007?:
00E4 22         678            ret
00E5            679   ;------------------------------------------------------------
00E5            680   ;Allocation info for local variables in function 'ADC_at_Pin'
00E5            681   ;------------------------------------------------------------
00E5            682   ;pin                       Allocated to registers 
00E5            683   ;------------------------------------------------------------
00E5            684   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:139: unsigned int ADC_at_Pin(unsigned char pin)
00E5            685   ;        -----------------------------------------
00E5            686   ;         function ADC_at_Pin
00E5            687   ;        -----------------------------------------
00E5            688   _ADC_at_Pin:
00E5 8582BB     689            mov     _AMX0P,dpl
00E8            690   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:142: AMX0N = LQFP32_MUX_GND;  // GND is negative input (Single-ended Mode)
00E8 75BA1F     691            mov     _AMX0N,#0x1F
00EB            692   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:144: AD0BUSY=1;
00EB D2EC       693            setb    _AD0BUSY
00ED            694   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:145: while (AD0BUSY); // Wait for dummy conversion to finish
00ED            695   L006001?:
00ED 20ECD8     696            jb      _AD0BUSY,L006001?
00F0            697   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:147: AD0BUSY = 1;
00F0 D2EC       698            setb    _AD0BUSY
00F2            699   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:148: while (AD0BUSY); // Wait for conversion to complete
00F2            700   L006004?:
00F2 20EC18     701            jb      _AD0BUSY,L006004?
00F5            702   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:149: return (ADC0L+(ADC0H*0x100));
00F5 AABD       703            mov     r2,_ADC0L
00F7 7B00       704            mov     r3,#0x00
00F9 ADBE       705            mov     r5,_ADC0H
00FB 7C00       706            mov     r4,#0x00
00FD EC         707            mov     a,r4
00FE 2A         708            add     a,r2
00FF F582       709            mov     dpl,a
0101 ED         710            mov     a,r5
0102 3B         711            addc    a,r3
0103 F583       712            mov     dph,a
0105 22         713            ret
0106            714   ;------------------------------------------------------------
0106            715   ;Allocation info for local variables in function 'Volts_at_Pin'
0106            716   ;------------------------------------------------------------
0106            717   ;pin                       Allocated to registers r2 
0106            718   ;------------------------------------------------------------
0106            719   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:152: float Volts_at_Pin(unsigned char pin)
0106            720   ;        -----------------------------------------
0106            721   ;         function Volts_at_Pin
0106            722   ;        -----------------------------------------
0106            723   _Volts_at_Pin:
0106            724   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:154: return ((ADC_at_Pin(pin)*3.30)/1024.0);
0106 120100     725            lcall   _ADC_at_Pin
0109 120100     726            lcall   ___uint2fs
010C AA82       727            mov     r2,dpl
010E AB83       728            mov     r3,dph
0110 ACF0       729            mov     r4,b
0112 FD         730            mov     r5,a
0113 C002       731            push    ar2
0115 C003       732            push    ar3
0117 C004       733            push    ar4
0119 C005       734            push    ar5
011B 903333     735            mov     dptr,#0x3333
011E 75F053     736            mov     b,#0x53
0121 7440       737            mov     a,#0x40
0123 120100     738            lcall   ___fsmul
0126 AA82       739            mov     r2,dpl
0128 AB83       740            mov     r3,dph
012A ACF0       741            mov     r4,b
012C FD         742            mov     r5,a
012D E581       743            mov     a,sp
012F 24FC       744            add     a,#0xfc
0131 F581       745            mov     sp,a
0133 E4         746            clr     a
0134 C0E0       747            push    acc
0136 C0E0       748            push    acc
0138 7480       749            mov     a,#0x80
013A C0E0       750            push    acc
013C 7444       751            mov     a,#0x44
013E C0E0       752            push    acc
0140 8A82       753            mov     dpl,r2
0142 8B83       754            mov     dph,r3
0144 8CF0       755            mov     b,r4
0146 ED         756            mov     a,r5
0147 120100     757            lcall   ___fsdiv
014A AA82       758            mov     r2,dpl
014C AB83       759            mov     r3,dph
014E ACF0       760            mov     r4,b
0150 FD         761            mov     r5,a
0151 E581       762            mov     a,sp
0153 24FC       763            add     a,#0xfc
0155 F581       764            mov     sp,a
0157 8A82       765            mov     dpl,r2
0159 8B83       766            mov     dph,r3
015B 8CF0       767            mov     b,r4
015D ED         768            mov     a,r5
015E 22         769            ret
015F            770   ;------------------------------------------------------------
015F            771   ;Allocation info for local variables in function 'main'
015F            772   ;------------------------------------------------------------
015F            773   ;selection                 Allocated with name '_main_selection_1_56'
015F            774   ;voltage                   Allocated with name '_main_voltage_1_56'
015F            775   ;------------------------------------------------------------
015F            776   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:157: void main (void)
015F            777   ;        -----------------------------------------
015F            778   ;         function main
015F            779   ;        -----------------------------------------
015F            780   _main:
015F            781   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:160: volatile float voltage = 0;
015F 75C800     782            mov     _main_voltage_1_56,#0x00
0162            783   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:162: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
0162 E4         784            clr     a
0163 F5C9       785            mov     (_main_voltage_1_56 + 1),a
0165 F5CA       786            mov     (_main_voltage_1_56 + 2),a
0167 F5CB       787            mov     (_main_voltage_1_56 + 3),a
0169 7498       788            mov     a,#__str_0
016B C0E0       789            push    acc
016D 7497       790            mov     a,#(__str_0 >> 8)
016F C0E0       791            push    acc
0171 7480       792            mov     a,#0x80
0173 C0E0       793            push    acc
0175 120100     794            lcall   _printf
0178 1581       795            dec     sp
017A 1581       796            dec     sp
017C 1581       797            dec     sp
017E            798   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:163: InitPinADC(1, 7);
017E 757007     799            mov     _InitPinADC_PARM_2,#0x07
0181 758201     800            mov     dpl,#0x01
0184 120100     801            lcall   _InitPinADC
0187            802   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:164: initADC();
0187 120100     803            lcall   _initADC
018A            804   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:166: while(1)
018A            805   L008015?:
018A            806   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:168: voltage = Volts_at_Pin(LQFP32_MUX_P1_7);
018A 758207     807            mov     dpl,#0x07
018D 120100     808            lcall   _Volts_at_Pin
0190 8582C8     809            mov     _main_voltage_1_56,dpl
0193 8583C9     810            mov     (_main_voltage_1_56 + 1),dph
0196 85F0CA     811            mov     (_main_voltage_1_56 + 2),b
0199 F5CB       812            mov     (_main_voltage_1_56 + 3),a
019B            813   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:169: PWM_1 = 0;
019B            814   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:170: PWM_2 = 0;
019B E4         815            clr     a
019C F500       816            mov     _PWM_1,a
019E F501       817            mov     (_PWM_1 + 1),a
01A0 F5C0       818            mov     _PWM_2,a
01A2 F5C1       819            mov     (_PWM_2 + 1),a
01A4            820   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:171: printf(GOTO_YX, 1,1);
01A4 7401       821            mov     a,#0x01
01A6 C0E0       822            push    acc
01A8 E4         823            clr     a
01A9 C0E0       824            push    acc
01AB 7401       825            mov     a,#0x01
01AD C0E0       826            push    acc
01AF E4         827            clr     a
01B0 C0E0       828            push    acc
01B2 7498       829            mov     a,#__str_1
01B4 C0E0       830            push    acc
01B6 7498       831            mov     a,#(__str_1 >> 8)
01B8 C0E0       832            push    acc
01BA 7480       833            mov     a,#0x80
01BC C0E0       834            push    acc
01BE 120100     835            lcall   _printf
01C1 E581       836            mov     a,sp
01C3 24F9       837            add     a,#0xf9
01C5 F581       838            mov     sp,a
01C7            839   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:172: printf("\rChoose between two options: temperature controlled motor (1), or user-controlled motor (other): ");
01C7 74D8       840            mov     a,#__str_2
01C9 C0E0       841            push    acc
01CB 7498       842            mov     a,#(__str_2 >> 8)
01CD C0E0       843            push    acc
01CF 7480       844            mov     a,#0x80
01D1 C0E0       845            push    acc
01D3 120100     846            lcall   _printf
01D6 1581       847            dec     sp
01D8 1581       848            dec     sp
01DA 1581       849            dec     sp
01DC            850   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:173: scanf("%d", selection);
01DC C078       851            push    _main_selection_1_56
01DE C079       852            push    (_main_selection_1_56 + 1)
01E0 7418       853            mov     a,#__str_3
01E2 C0E0       854            push    acc
01E4 7499       855            mov     a,#(__str_3 >> 8)
01E6 C0E0       856            push    acc
01E8 7480       857            mov     a,#0x80
01EA C0E0       858            push    acc
01EC 120100     859            lcall   _scanf
01EF E581       860            mov     a,sp
01F1 24FB       861            add     a,#0xfb
01F3 F581       862            mov     sp,a
01F5            863   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:175: if(selection==1)
01F5 7401       864            mov     a,#0x01
01F7 B57898     865            cjne    a,_main_selection_1_56,L008024?
01FA E4         866            clr     a
01FB B57998     867            cjne    a,(_main_selection_1_56 + 1),L008024?
01FE 8001       868            sjmp    L008025?
0200            869   L008024?:
0200 8001       870            sjmp    L008012?
0202            871   L008025?:
0202            872   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:177: printf("\rvoltage: %.3f", voltage);
0202 C0C8       873            push    _main_voltage_1_56
0204 C0C9       874            push    (_main_voltage_1_56 + 1)
0206 C0CA       875            push    (_main_voltage_1_56 + 2)
0208 C0CB       876            push    (_main_voltage_1_56 + 3)
020A 7458       877            mov     a,#__str_4
020C C0E0       878            push    acc
020E 749A       879            mov     a,#(__str_4 >> 8)
0210 C0E0       880            push    acc
0212 7480       881            mov     a,#0x80
0214 C0E0       882            push    acc
0216 120100     883            lcall   _printf
0219 E581       884            mov     a,sp
021B 24F9       885            add     a,#0xf9
021D F581       886            mov     sp,a
021F            887   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:178: printf("\nType 'o' and press enter to end PWM: ");
021F 7498       888            mov     a,#__str_5
0221 C0E0       889            push    acc
0223 749A       890            mov     a,#(__str_5 >> 8)
0225 C0E0       891            push    acc
0227 7480       892            mov     a,#0x80
0229 C0E0       893            push    acc
022B 120100     894            lcall   _printf
022E 1581       895            dec     sp
0230 1581       896            dec     sp
0232 1581       897            dec     sp
0234            898   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:179: scanf("%s", &proceed);
0234 7460       899            mov     a,#_proceed
0236 C0E0       900            push    acc
0238 7441       901            mov     a,#(_proceed >> 8)
023A C0E0       902            push    acc
023C 7440       903            mov     a,#0x40
023E C0E0       904            push    acc
0240 74D8       905            mov     a,#__str_6
0242 C0E0       906            push    acc
0244 749A       907            mov     a,#(__str_6 >> 8)
0246 C0E0       908            push    acc
0248 7480       909            mov     a,#0x80
024A C0E0       910            push    acc
024C 120100     911            lcall   _scanf
024F E581       912            mov     a,sp
0251 24FA       913            add     a,#0xfa
0253 F581       914            mov     sp,a
0255 020100     915            ljmp    L008013?
0258            916   L008012?:
0258            917   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:182: printf("\rPlease Input PWM Range 100 to -100: ");
0258 7458       918            mov     a,#__str_7
025A C0E0       919            push    acc
025C 749B       920            mov     a,#(__str_7 >> 8)
025E C0E0       921            push    acc
0260 7480       922            mov     a,#0x80
0262 C0E0       923            push    acc
0264 120100     924            lcall   _printf
0267 1581       925            dec     sp
0269 1581       926            dec     sp
026B 1581       927            dec     sp
026D            928   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:183: scanf("%d", &DRV);
026D 7480       929            mov     a,#_DRV
026F C0E0       930            push    acc
0271 7415       931            mov     a,#(_DRV >> 8)
0273 C0E0       932            push    acc
0275 7440       933            mov     a,#0x40
0277 C0E0       934            push    acc
0279 7418       935            mov     a,#__str_3
027B C0E0       936            push    acc
027D 7499       937            mov     a,#(__str_3 >> 8)
027F C0E0       938            push    acc
0281 7480       939            mov     a,#0x80
0283 C0E0       940            push    acc
0285 120100     941            lcall   _scanf
0288 E581       942            mov     a,sp
028A 24FA       943            add     a,#0xfa
028C F581       944            mov     sp,a
028E            945   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:184: if(DRV < -100 || DRV > 100)
028E C3         946            clr     c
028F E580       947            mov     a,_DRV
0291 949C       948            subb    a,#0x9C
0293 E581       949            mov     a,(_DRV + 1)
0295 6480       950            xrl     a,#0x80
0297 947F       951            subb    a,#0x7f
0299 4001       952            jc      L008007?
029B 7464       953            mov     a,#0x64
029D 9580       954            subb    a,_DRV
029F E4         955            clr     a
02A0 6480       956            xrl     a,#0x80
02A2 8581F0     957            mov     b,(_DRV + 1)
02A5 63F080     958            xrl     b,#0x80
02A8 95F0       959            subb    a,b
02AA 5001       960            jnc     L008008?
02AC            961   L008007?:
02AC            962   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:185: printf("Value Not Within Range");
02AC 7418       963            mov     a,#__str_8
02AE C0E0       964            push    acc
02B0 749C       965            mov     a,#(__str_8 >> 8)
02B2 C0E0       966            push    acc
02B4 7480       967            mov     a,#0x80
02B6 C0E0       968            push    acc
02B8 120100     969            lcall   _printf
02BB 1581       970            dec     sp
02BD 1581       971            dec     sp
02BF 1581       972            dec     sp
02C1 8001       973            sjmp    L008009?
02C3            974   L008008?:
02C3            975   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:186: else if(DRV > 0)
02C3 C3         976            clr     c
02C4 E4         977            clr     a
02C5 9580       978            subb    a,_DRV
02C7 E4         979            clr     a
02C8 6480       980            xrl     a,#0x80
02CA 8581F0     981            mov     b,(_DRV + 1)
02CD 63F080     982            xrl     b,#0x80
02D0 95F0       983            subb    a,b
02D2 5001       984            jnc     L008005?
02D4            985   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:188: PWM_1 = DRV;
02D4 858000     986            mov     _PWM_1,_DRV
02D7 858101     987            mov     (_PWM_1 + 1),(_DRV + 1)
02DA            988   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:189: PWM_2 = 0;
02DA E4         989            clr     a
02DB F5C0       990            mov     _PWM_2,a
02DD F5C1       991            mov     (_PWM_2 + 1),a
02DF 8001       992            sjmp    L008009?
02E1            993   L008005?:
02E1            994   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:191: else if(DRV < 0)
02E1 E581       995            mov     a,(_DRV + 1)
02E3 30E7D8     996            jnb     acc.7,L008002?
02E6            997   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:193: PWM_1 = 0;
02E6 E4         998            clr     a
02E7 F500       999            mov     _PWM_1,a
02E9 F501      1000            mov     (_PWM_1 + 1),a
02EB           1001   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:194: PWM_2 = -DRV;
02EB C3        1002            clr     c
02EC E4        1003            clr     a
02ED 9580      1004            subb    a,_DRV
02EF F5C0      1005            mov     _PWM_2,a
02F1 E4        1006            clr     a
02F2 9581      1007            subb    a,(_DRV + 1)
02F4 F5C1      1008            mov     (_PWM_2 + 1),a
02F6 8001      1009            sjmp    L008009?
02F8           1010   L008002?:
02F8           1011   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:198: PWM_1 = 0;
02F8           1012   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:199: PWM_2 = 0;
02F8 E4        1013            clr     a
02F9 F500      1014            mov     _PWM_1,a
02FB F501      1015            mov     (_PWM_1 + 1),a
02FD F5C0      1016            mov     _PWM_2,a
02FF F5C1      1017            mov     (_PWM_2 + 1),a
0301           1018   L008009?:
0301           1019   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:201: printf("\nType 'o' and press enter to end PWM: ");
0301 7498      1020            mov     a,#__str_5
0303 C0E0      1021            push    acc
0305 749A      1022            mov     a,#(__str_5 >> 8)
0307 C0E0      1023            push    acc
0309 7480      1024            mov     a,#0x80
030B C0E0      1025            push    acc
030D 120100    1026            lcall   _printf
0310 1581      1027            dec     sp
0312 1581      1028            dec     sp
0314 1581      1029            dec     sp
0316           1030   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:202: scanf("%s", &proceed);
0316 7460      1031            mov     a,#_proceed
0318 C0E0      1032            push    acc
031A 7441      1033            mov     a,#(_proceed >> 8)
031C C0E0      1034            push    acc
031E 7440      1035            mov     a,#0x40
0320 C0E0      1036            push    acc
0322 74D8      1037            mov     a,#__str_6
0324 C0E0      1038            push    acc
0326 749A      1039            mov     a,#(__str_6 >> 8)
0328 C0E0      1040            push    acc
032A 7480      1041            mov     a,#0x80
032C C0E0      1042            push    acc
032E 120100    1043            lcall   _scanf
0331 E581      1044            mov     a,sp
0333 24FA      1045            add     a,#0xfa
0335 F581      1046            mov     sp,a
0337           1047   L008013?:
0337           1048   ;        C:\Users\jeffreyliou\Desktop\elec291\lab6\lab6 code.c:204: printf("\x1b[2J");
0337 7498      1049            mov     a,#__str_0
0339 C0E0      1050            push    acc
033B 7497      1051            mov     a,#(__str_0 >> 8)
033D C0E0      1052            push    acc
033F 7480      1053            mov     a,#0x80
0341 C0E0      1054            push    acc
0343 120100    1055            lcall   _printf
0346 1581      1056            dec     sp
0348 1581      1057            dec     sp
034A 1581      1058            dec     sp
034C 020100    1059            ljmp    L008015?
034F           1060            rseg R_CSEG
034F           1061   
0000           1062            rseg R_XINIT
0000           1063   
0000           1064            rseg R_CONST
0000           1065   __str_0:
0000 1B        1066            db 0x1B
0001 5B324A    1067            db '[2J'
0004 00        1068            db 0x00
0005           1069   __str_1:
0005 1B        1070            db 0x1B
0006 5B25643B  1071            db '[%d;%dH'
     256448
000D 00        1072            db 0x00
000E           1073   __str_2:
000E 0D        1074            db 0x0D
000F 43686F6F  1075            db 'Choose between two options: temperature controlled motor (1'
     73652062
     65747765
     656E2074
     776F206F
     7074696F
     6E733A20
     74656D70
     65726174
     75726520
     636F6E74
     726F6C6C
     6564206D
     6F746F72
     202831
004A 292C206F  1076            db '), or user-controlled motor (other): '
     72207573
     65722D63
     6F6E7472
     6F6C6C65
     64206D6F
     746F7220
     286F7468
     6572293A
     20
006F 00        1077            db 0x00
0070           1078   __str_3:
0070 2564      1079            db '%d'
0072 00        1080            db 0x00
0073           1081   __str_4:
0073 0D        1082            db 0x0D
0074 766F6C74  1083            db 'voltage: %.3f'
     6167653A
     20252E33
     66
0081 00        1084            db 0x00
0082           1085   __str_5:
0082 0A        1086            db 0x0A
0083 54797065  1087            db 'Type '
     20
0088 27        1088            db 0x27
0089 6F        1089            db 'o'
008A 27        1090            db 0x27
008B 20616E64  1091            db ' and press enter to end PWM: '
     20707265
     73732065
     6E746572
     20746F20
     656E6420
     50574D3A
     20
00A8 00        1092            db 0x00
00A9           1093   __str_6:
00A9 2573      1094            db '%s'
00AB 00        1095            db 0x00
00AC           1096   __str_7:
00AC 0D        1097            db 0x0D
00AD 506C6561  1098            db 'Please Input PWM Range 100 to -100: '
     73652049
     6E707574
     2050574D
     2052616E
     67652031
     30302074
     6F202D31
     30303A20
00D1 00        1099            db 0x00
00D2           1100   __str_8:
00D2 56616C75  1101            db 'Value Not Within Range'
     65204E6F
     74205769
     7468696E
     2052616E
     6765
00E8 00        1102            db 0x00
00E9           1103   
002E           1104            CSEG
002E           1105   
002E           1106   end
