0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Tue Mar 15 12:25:21 2016
0000              5   ;--------------------------------------------------------
                  5   $name CrossIde1
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _Volts_at_Pin
0000             30            public _ADC_at_Pin
0000             31            public _InitPinADC
0000             32            public _InitADC
0000             33            public _Timer2_ISR
0000             34            public _PORT_Init
0000             35            public __c51_external_startup
0000             36            public _DRV
0000             37            public _PWM_2
0000             38            public _PWM_1
0000             39            public _proceed
0000             40            public _pwm_count
0000             41   ;--------------------------------------------------------
0000             42   ; Special Function Registers
0000             43   ;--------------------------------------------------------
0000             44   _P0             DATA 0x80
0000             45   _SP             DATA 0x81
0000             46   _DPL            DATA 0x82
0000             47   _DPH            DATA 0x83
0000             48   _EMI0TC         DATA 0x84
0000             49   _EMI0CF         DATA 0x85
0000             50   _OSCLCN         DATA 0x86
0000             51   _PCON           DATA 0x87
0000             52   _TCON           DATA 0x88
0000             53   _TMOD           DATA 0x89
0000             54   _TL0            DATA 0x8a
0000             55   _TL1            DATA 0x8b
0000             56   _TH0            DATA 0x8c
0000             57   _TH1            DATA 0x8d
0000             58   _CKCON          DATA 0x8e
0000             59   _PSCTL          DATA 0x8f
0000             60   _P1             DATA 0x90
0000             61   _TMR3CN         DATA 0x91
0000             62   _TMR4CN         DATA 0x91
0000             63   _TMR3RLL        DATA 0x92
0000             64   _TMR4RLL        DATA 0x92
0000             65   _TMR3RLH        DATA 0x93
0000             66   _TMR4RLH        DATA 0x93
0000             67   _TMR3L          DATA 0x94
0000             68   _TMR4L          DATA 0x94
0000             69   _TMR3H          DATA 0x95
0000             70   _TMR4H          DATA 0x95
0000             71   _USB0ADR        DATA 0x96
0000             72   _USB0DAT        DATA 0x97
0000             73   _SCON           DATA 0x98
0000             74   _SCON0          DATA 0x98
0000             75   _SBUF           DATA 0x99
0000             76   _SBUF0          DATA 0x99
0000             77   _CPT1CN         DATA 0x9a
0000             78   _CPT0CN         DATA 0x9b
0000             79   _CPT1MD         DATA 0x9c
0000             80   _CPT0MD         DATA 0x9d
0000             81   _CPT1MX         DATA 0x9e
0000             82   _CPT0MX         DATA 0x9f
0000             83   _P2             DATA 0xa0
0000             84   _SPI0CFG        DATA 0xa1
0000             85   _SPI0CKR        DATA 0xa2
0000             86   _SPI0DAT        DATA 0xa3
0000             87   _P0MDOUT        DATA 0xa4
0000             88   _P1MDOUT        DATA 0xa5
0000             89   _P2MDOUT        DATA 0xa6
0000             90   _P3MDOUT        DATA 0xa7
0000             91   _IE             DATA 0xa8
0000             92   _CLKSEL         DATA 0xa9
0000             93   _EMI0CN         DATA 0xaa
0000             94   __XPAGE         DATA 0xaa
0000             95   _SBCON1         DATA 0xac
0000             96   _P4MDOUT        DATA 0xae
0000             97   _PFE0CN         DATA 0xaf
0000             98   _P3             DATA 0xb0
0000             99   _OSCXCN         DATA 0xb1
0000            100   _OSCICN         DATA 0xb2
0000            101   _OSCICL         DATA 0xb3
0000            102   _SBRLL1         DATA 0xb4
0000            103   _SBRLH1         DATA 0xb5
0000            104   _FLSCL          DATA 0xb6
0000            105   _FLKEY          DATA 0xb7
0000            106   _IP             DATA 0xb8
0000            107   _CLKMUL         DATA 0xb9
0000            108   _SMBTC          DATA 0xb9
0000            109   _AMX0N          DATA 0xba
0000            110   _AMX0P          DATA 0xbb
0000            111   _ADC0CF         DATA 0xbc
0000            112   _ADC0L          DATA 0xbd
0000            113   _ADC0H          DATA 0xbe
0000            114   _SFRPAGE        DATA 0xbf
0000            115   _SMB0CN         DATA 0xc0
0000            116   _SMB1CN         DATA 0xc0
0000            117   _SMB0CF         DATA 0xc1
0000            118   _SMB1CF         DATA 0xc1
0000            119   _SMB0DAT        DATA 0xc2
0000            120   _SMB1DAT        DATA 0xc2
0000            121   _ADC0GTL        DATA 0xc3
0000            122   _ADC0GTH        DATA 0xc4
0000            123   _ADC0LTL        DATA 0xc5
0000            124   _ADC0LTH        DATA 0xc6
0000            125   _P4             DATA 0xc7
0000            126   _TMR2CN         DATA 0xc8
0000            127   _TMR5CN         DATA 0xc8
0000            128   _REG01CN        DATA 0xc9
0000            129   _TMR2RLL        DATA 0xca
0000            130   _TMR5RLL        DATA 0xca
0000            131   _TMR2RLH        DATA 0xcb
0000            132   _TMR5RLH        DATA 0xcb
0000            133   _TMR2L          DATA 0xcc
0000            134   _TMR5L          DATA 0xcc
0000            135   _TMR2H          DATA 0xcd
0000            136   _TMR5H          DATA 0xcd
0000            137   _SMB0ADM        DATA 0xce
0000            138   _SMB1ADM        DATA 0xce
0000            139   _SMB0ADR        DATA 0xcf
0000            140   _SMB1ADR        DATA 0xcf
0000            141   _PSW            DATA 0xd0
0000            142   _REF0CN         DATA 0xd1
0000            143   _SCON1          DATA 0xd2
0000            144   _SBUF1          DATA 0xd3
0000            145   _P0SKIP         DATA 0xd4
0000            146   _P1SKIP         DATA 0xd5
0000            147   _P2SKIP         DATA 0xd6
0000            148   _USB0XCN        DATA 0xd7
0000            149   _PCA0CN         DATA 0xd8
0000            150   _PCA0MD         DATA 0xd9
0000            151   _PCA0CPM0       DATA 0xda
0000            152   _PCA0CPM1       DATA 0xdb
0000            153   _PCA0CPM2       DATA 0xdc
0000            154   _PCA0CPM3       DATA 0xdd
0000            155   _PCA0CPM4       DATA 0xde
0000            156   _P3SKIP         DATA 0xdf
0000            157   _ACC            DATA 0xe0
0000            158   _XBR0           DATA 0xe1
0000            159   _XBR1           DATA 0xe2
0000            160   _XBR2           DATA 0xe3
0000            161   _IT01CF         DATA 0xe4
0000            162   _CKCON1         DATA 0xe4
0000            163   _SMOD1          DATA 0xe5
0000            164   _EIE1           DATA 0xe6
0000            165   _EIE2           DATA 0xe7
0000            166   _ADC0CN         DATA 0xe8
0000            167   _PCA0CPL1       DATA 0xe9
0000            168   _PCA0CPH1       DATA 0xea
0000            169   _PCA0CPL2       DATA 0xeb
0000            170   _PCA0CPH2       DATA 0xec
0000            171   _PCA0CPL3       DATA 0xed
0000            172   _PCA0CPH3       DATA 0xee
0000            173   _RSTSRC         DATA 0xef
0000            174   _B              DATA 0xf0
0000            175   _P0MDIN         DATA 0xf1
0000            176   _P1MDIN         DATA 0xf2
0000            177   _P2MDIN         DATA 0xf3
0000            178   _P3MDIN         DATA 0xf4
0000            179   _P4MDIN         DATA 0xf5
0000            180   _EIP1           DATA 0xf6
0000            181   _EIP2           DATA 0xf7
0000            182   _SPI0CN         DATA 0xf8
0000            183   _PCA0L          DATA 0xf9
0000            184   _PCA0H          DATA 0xfa
0000            185   _PCA0CPL0       DATA 0xfb
0000            186   _PCA0CPH0       DATA 0xfc
0000            187   _PCA0CPL4       DATA 0xfd
0000            188   _PCA0CPH4       DATA 0xfe
0000            189   _VDM0CN         DATA 0xff
0000            190   _DPTR           DATA 0x8382
0000            191   _TMR2RL         DATA 0xcbca
0000            192   _TMR3RL         DATA 0x9392
0000            193   _TMR4RL         DATA 0x9392
0000            194   _TMR5RL         DATA 0xcbca
0000            195   _TMR2           DATA 0xcdcc
0000            196   _TMR3           DATA 0x9594
0000            197   _TMR4           DATA 0x9594
0000            198   _TMR5           DATA 0xcdcc
0000            199   _SBRL1          DATA 0xb5b4
0000            200   _ADC0           DATA 0xbebd
0000            201   _ADC0GT         DATA 0xc4c3
0000            202   _ADC0LT         DATA 0xc6c5
0000            203   _PCA0           DATA 0xfaf9
0000            204   _PCA0CP1        DATA 0xeae9
0000            205   _PCA0CP2        DATA 0xeceb
0000            206   _PCA0CP3        DATA 0xeeed
0000            207   _PCA0CP0        DATA 0xfcfb
0000            208   _PCA0CP4        DATA 0xfefd
0000            209   ;--------------------------------------------------------
0000            210   ; special function bits
0000            211   ;--------------------------------------------------------
0000            212   _P0_0           BIT 0x80
0000            213   _P0_1           BIT 0x81
0000            214   _P0_2           BIT 0x82
0000            215   _P0_3           BIT 0x83
0000            216   _P0_4           BIT 0x84
0000            217   _P0_5           BIT 0x85
0000            218   _P0_6           BIT 0x86
0000            219   _P0_7           BIT 0x87
0000            220   _TF1            BIT 0x8f
0000            221   _TR1            BIT 0x8e
0000            222   _TF0            BIT 0x8d
0000            223   _TR0            BIT 0x8c
0000            224   _IE1            BIT 0x8b
0000            225   _IT1            BIT 0x8a
0000            226   _IE0            BIT 0x89
0000            227   _IT0            BIT 0x88
0000            228   _P1_0           BIT 0x90
0000            229   _P1_1           BIT 0x91
0000            230   _P1_2           BIT 0x92
0000            231   _P1_3           BIT 0x93
0000            232   _P1_4           BIT 0x94
0000            233   _P1_5           BIT 0x95
0000            234   _P1_6           BIT 0x96
0000            235   _P1_7           BIT 0x97
0000            236   _S0MODE         BIT 0x9f
0000            237   _SCON0_6        BIT 0x9e
0000            238   _MCE0           BIT 0x9d
0000            239   _REN0           BIT 0x9c
0000            240   _TB80           BIT 0x9b
0000            241   _RB80           BIT 0x9a
0000            242   _TI0            BIT 0x99
0000            243   _RI0            BIT 0x98
0000            244   _SCON_6         BIT 0x9e
0000            245   _MCE            BIT 0x9d
0000            246   _REN            BIT 0x9c
0000            247   _TB8            BIT 0x9b
0000            248   _RB8            BIT 0x9a
0000            249   _TI             BIT 0x99
0000            250   _RI             BIT 0x98
0000            251   _P2_0           BIT 0xa0
0000            252   _P2_1           BIT 0xa1
0000            253   _P2_2           BIT 0xa2
0000            254   _P2_3           BIT 0xa3
0000            255   _P2_4           BIT 0xa4
0000            256   _P2_5           BIT 0xa5
0000            257   _P2_6           BIT 0xa6
0000            258   _P2_7           BIT 0xa7
0000            259   _EA             BIT 0xaf
0000            260   _ESPI0          BIT 0xae
0000            261   _ET2            BIT 0xad
0000            262   _ES0            BIT 0xac
0000            263   _ET1            BIT 0xab
0000            264   _EX1            BIT 0xaa
0000            265   _ET0            BIT 0xa9
0000            266   _EX0            BIT 0xa8
0000            267   _P3_0           BIT 0xb0
0000            268   _P3_1           BIT 0xb1
0000            269   _P3_2           BIT 0xb2
0000            270   _P3_3           BIT 0xb3
0000            271   _P3_4           BIT 0xb4
0000            272   _P3_5           BIT 0xb5
0000            273   _P3_6           BIT 0xb6
0000            274   _P3_7           BIT 0xb7
0000            275   _IP_7           BIT 0xbf
0000            276   _PSPI0          BIT 0xbe
0000            277   _PT2            BIT 0xbd
0000            278   _PS0            BIT 0xbc
0000            279   _PT1            BIT 0xbb
0000            280   _PX1            BIT 0xba
0000            281   _PT0            BIT 0xb9
0000            282   _PX0            BIT 0xb8
0000            283   _MASTER0        BIT 0xc7
0000            284   _TXMODE0        BIT 0xc6
0000            285   _STA0           BIT 0xc5
0000            286   _STO0           BIT 0xc4
0000            287   _ACKRQ0         BIT 0xc3
0000            288   _ARBLOST0       BIT 0xc2
0000            289   _ACK0           BIT 0xc1
0000            290   _SI0            BIT 0xc0
0000            291   _MASTER1        BIT 0xc7
0000            292   _TXMODE1        BIT 0xc6
0000            293   _STA1           BIT 0xc5
0000            294   _STO1           BIT 0xc4
0000            295   _ACKRQ1         BIT 0xc3
0000            296   _ARBLOST1       BIT 0xc2
0000            297   _ACK1           BIT 0xc1
0000            298   _SI1            BIT 0xc0
0000            299   _TF2            BIT 0xcf
0000            300   _TF2H           BIT 0xcf
0000            301   _TF2L           BIT 0xce
0000            302   _TF2LEN         BIT 0xcd
0000            303   _TF2CEN         BIT 0xcc
0000            304   _T2SPLIT        BIT 0xcb
0000            305   _TR2            BIT 0xca
0000            306   _T2CSS          BIT 0xc9
0000            307   _T2XCLK         BIT 0xc8
0000            308   _TF5H           BIT 0xcf
0000            309   _TF5L           BIT 0xce
0000            310   _TF5LEN         BIT 0xcd
0000            311   _TMR5CN_4       BIT 0xcc
0000            312   _T5SPLIT        BIT 0xcb
0000            313   _TR5            BIT 0xca
0000            314   _TMR5CN_1       BIT 0xc9
0000            315   _T5XCLK         BIT 0xc8
0000            316   _CY             BIT 0xd7
0000            317   _AC             BIT 0xd6
0000            318   _F0             BIT 0xd5
0000            319   _RS1            BIT 0xd4
0000            320   _RS0            BIT 0xd3
0000            321   _OV             BIT 0xd2
0000            322   _F1             BIT 0xd1
0000            323   _PARITY         BIT 0xd0
0000            324   _CF             BIT 0xdf
0000            325   _CR             BIT 0xde
0000            326   _PCA0CN_5       BIT 0xde
0000            327   _CCF4           BIT 0xdc
0000            328   _CCF3           BIT 0xdb
0000            329   _CCF2           BIT 0xda
0000            330   _CCF1           BIT 0xd9
0000            331   _CCF0           BIT 0xd8
0000            332   _ACC_7          BIT 0xe7
0000            333   _ACC_6          BIT 0xe6
0000            334   _ACC_5          BIT 0xe5
0000            335   _ACC_4          BIT 0xe4
0000            336   _ACC_3          BIT 0xe3
0000            337   _ACC_2          BIT 0xe2
0000            338   _ACC_1          BIT 0xe1
0000            339   _ACC_0          BIT 0xe0
0000            340   _AD0EN          BIT 0xef
0000            341   _AD0TM          BIT 0xee
0000            342   _AD0INT         BIT 0xed
0000            343   _AD0BUSY        BIT 0xec
0000            344   _AD0WINT        BIT 0xeb
0000            345   _AD0CM2         BIT 0xea
0000            346   _AD0CM1         BIT 0xe9
0000            347   _AD0CM0         BIT 0xe8
0000            348   _B_7            BIT 0xf7
0000            349   _B_6            BIT 0xf6
0000            350   _B_5            BIT 0xf5
0000            351   _B_4            BIT 0xf4
0000            352   _B_3            BIT 0xf3
0000            353   _B_2            BIT 0xf2
0000            354   _B_1            BIT 0xf1
0000            355   _B_0            BIT 0xf0
0000            356   _SPIF           BIT 0xff
0000            357   _WCOL           BIT 0xfe
0000            358   _MODF           BIT 0xfd
0000            359   _RXOVRN         BIT 0xfc
0000            360   _NSSMD1         BIT 0xfb
0000            361   _NSSMD0         BIT 0xfa
0000            362   _TXBMT          BIT 0xf9
0000            363   _SPIEN          BIT 0xf8
0000            364   ;--------------------------------------------------------
0000            365   ; overlayable register banks
0000            366   ;--------------------------------------------------------
0000            367            rbank0 segment data overlay
0000            368   ;--------------------------------------------------------
0000            369   ; internal ram data
0000            370   ;--------------------------------------------------------
0000            371            rseg R_DSEG
0000            372   _pwm_count:
0000            373            ds 1
0001            374   _proceed:
0001            375            ds 1
0002            376   _PWM_1:
0002            377            ds 2
0004            378   _PWM_2:
0004            379            ds 2
0006            380   _DRV:
0006            381            ds 2
0008            382   _main_selection_1_58:
0008            383            ds 2
000A            384   _main_voltage_1_58:
000A            385            ds 4
000E            386   ;--------------------------------------------------------
000E            387   ; overlayable items in internal ram 
000E            388   ;--------------------------------------------------------
0000            389            rseg    R_OSEG
0000            390   _InitPinADC_PARM_2:
0000            391            ds 1
0001            392            rseg    R_OSEG
0001            393   ;--------------------------------------------------------
0001            394   ; indirectly addressable internal ram data
0001            395   ;--------------------------------------------------------
0000            396            rseg R_ISEG
0000            397   ;--------------------------------------------------------
0000            398   ; absolute internal ram data
0000            399   ;--------------------------------------------------------
0000            400            DSEG
0000            401   ;--------------------------------------------------------
0000            402   ; bit data
0000            403   ;--------------------------------------------------------
0000            404            rseg R_BSEG
0000            405   _Timer2_ISR_sloc0_1_0:
0000            406            DBIT    1
0001            407   ;--------------------------------------------------------
0001            408   ; paged external ram data
0001            409   ;--------------------------------------------------------
0000            410            rseg R_PSEG
0000            411   ;--------------------------------------------------------
0000            412   ; external ram data
0000            413   ;--------------------------------------------------------
0000            414            rseg R_XSEG
0000            415   ;--------------------------------------------------------
0000            416   ; absolute external ram data
0000            417   ;--------------------------------------------------------
0000            418            XSEG
0000            419   ;--------------------------------------------------------
0000            420   ; external initialized ram data
0000            421   ;--------------------------------------------------------
0000            422            rseg R_IXSEG
0000            423            rseg R_HOME
0000            424            rseg R_GSINIT
0000            425            rseg R_CSEG
0000            426   ;--------------------------------------------------------
0000            427   ; Reset entry point and interrupt vectors
0000            428   ;--------------------------------------------------------
0000            429            CSEG at 0x0000
0000 020100     430            ljmp    _crt0
002B            431            CSEG at 0x002b
002B 020100     432            ljmp    _Timer2_ISR
002E            433   ;--------------------------------------------------------
002E            434   ; global & static initialisations
002E            435   ;--------------------------------------------------------
0000            436            rseg R_HOME
0000            437            rseg R_GSINIT
0000            438            rseg R_GSINIT
0000            439   ;--------------------------------------------------------
0000            440   ; data variables initialization
0000            441   ;--------------------------------------------------------
0000            442            rseg R_DINIT
0000            443   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:23: volatile unsigned char pwm_count=0;
0000 75E800     444            mov     _pwm_count,#0x00
0003            445   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:25: volatile unsigned int PWM_1=0;
0003 E4         446            clr     a
0004 F568       447            mov     _PWM_1,a
0006 F569       448            mov     (_PWM_1 + 1),a
0008            449   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:26: volatile unsigned int PWM_2=0;
0008 E4         450            clr     a
0009 F500       451            mov     _PWM_2,a
000B F501       452            mov     (_PWM_2 + 1),a
000D            453   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:27: volatile int DRV = 0;
000D E4         454            clr     a
000E F5C0       455            mov     _DRV,a
0010 F5C1       456            mov     (_DRV + 1),a
0012            457            ; The linker places a 'ret' at the end of segment R_DINIT.
0012            458   ;--------------------------------------------------------
0012            459   ; code
0012            460   ;--------------------------------------------------------
0000            461            rseg R_CSEG
0000            462   ;------------------------------------------------------------
0000            463   ;Allocation info for local variables in function '_c51_external_startup'
0000            464   ;------------------------------------------------------------
0000            465   ;------------------------------------------------------------
0000            466   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:30: char _c51_external_startup (void)
0000            467   ;        -----------------------------------------
0000            468   ;         function _c51_external_startup
0000            469   ;        -----------------------------------------
0000            470   __c51_external_startup:
0000            471            using   0
0000            472   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:32: PCA0MD&=(~0x40) ;    // DISABLE WDT: clear Watchdog Enable bit
0000 53D9BF     473            anl     _PCA0MD,#0xBF
0003            474   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:33: VDM0CN=0x80; // enable VDD monitor
0003 75FF80     475            mov     _VDM0CN,#0x80
0006            476   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:34: RSTSRC=0x02|0x04; // Enable reset on missing clock detector and VDD
0006 75EF06     477            mov     _RSTSRC,#0x06
0009            478   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:42: CLKSEL|=0b_0000_0011; // SYSCLK derived from the Internal High-Frequency Oscillator / 1.
0009 43A903     479            orl     _CLKSEL,#0x03
000C            480   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:46: OSCICN |= 0x03; // Configure internal oscillator for its maximum frequency
000C 43B203     481            orl     _OSCICN,#0x03
000F            482   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:49: SCON0 = 0x10; 
000F 759810     483            mov     _SCON0,#0x10
0012            484   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:51: TH1 = 0x10000-((SYSCLK/BAUDRATE)/2L);
0012 758D30     485            mov     _TH1,#0x30
0015            486   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:52: CKCON &= ~0x0B;                  // T1M = 1; SCA1:0 = xx
0015 538EF4     487            anl     _CKCON,#0xF4
0018            488   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:53: CKCON |=  0x08;
0018 438E08     489            orl     _CKCON,#0x08
001B            490   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:66: TL1 = TH1;      // Init Timer1
001B 858D8B     491            mov     _TL1,_TH1
001E            492   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:67: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit autoreload
001E 53890F     493            anl     _TMOD,#0x0F
0021            494   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:68: TMOD |=  0x20;                       
0021 438920     495            orl     _TMOD,#0x20
0024            496   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:69: TR1 = 1; // START Timer1
0024 D28E       497            setb    _TR1
0026            498   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:70: TI = 1;  // Indicate TX0 ready
0026 D299       499            setb    _TI
0028            500   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:73: P2MDOUT|=0b_0000_0011;
0028 43A603     501            orl     _P2MDOUT,#0x03
002B            502   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:74: P0MDOUT |= 0x10; // Enable UTX as push-pull output
002B 43A410     503            orl     _P0MDOUT,#0x10
002E            504   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:75: XBR0     = 0x01; // Enable UART on P0.4(TX) and P0.5(RX)                     
002E 75E101     505            mov     _XBR0,#0x01
0031            506   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:76: XBR1     = 0x40; // Enable crossbar and weak pull-ups
0031 75E240     507            mov     _XBR1,#0x40
0034            508   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:79: TMR2CN=0x00;   // Stop Timer2; Clear TF2;
0034 75C800     509            mov     _TMR2CN,#0x00
0037            510   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:80: CKCON|=0b_0001_0000;
0037 438E10     511            orl     _CKCON,#0x10
003A            512   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:81: TMR2RL=(-(SYSCLK/(2*48))/(100L)); // Initialize reload value
003A 75CA78     513            mov     _TMR2RL,#0x78
003D 75CBEC     514            mov     (_TMR2RL >> 8),#0xEC
0040            515   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:82: TMR2=0xffff;   // Set to reload immediately
0040 75CCFF     516            mov     _TMR2,#0xFF
0043 75CDFF     517            mov     (_TMR2 >> 8),#0xFF
0046            518   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:83: ET2=1;         // Enable Timer2 interrupts
0046 D2AD       519            setb    _ET2
0048            520   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:84: TR2=1;         // Start Timer2
0048 D2CA       521            setb    _TR2
004A            522   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:86: EA=1; // Enable interrupts
004A D2AF       523            setb    _EA
004C            524   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:88: return 0;
004C 758200     525            mov     dpl,#0x00
004F 22         526            ret
0050            527   ;------------------------------------------------------------
0050            528   ;Allocation info for local variables in function 'PORT_Init'
0050            529   ;------------------------------------------------------------
0050            530   ;------------------------------------------------------------
0050            531   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:91: void PORT_Init (void)
0050            532   ;        -----------------------------------------
0050            533   ;         function PORT_Init
0050            534   ;        -----------------------------------------
0050            535   _PORT_Init:
0050            536   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:93: P0MDOUT |= 0x10; // Enable UART TX as push-pull output
0050 43A410     537            orl     _P0MDOUT,#0x10
0053            538   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:94: XBR0=0b_0000_0001; // Enable UART on P0.4(TX) and P0.5(RX)                    
0053 75E101     539            mov     _XBR0,#0x01
0056            540   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:95: XBR1=0b_0101_0000; // Enable crossbar.  Enable T0 input.
0056 75E250     541            mov     _XBR1,#0x50
0059            542   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:96: XBR2=0b_0000_0000;
0059 75E300     543            mov     _XBR2,#0x00
005C 22         544            ret
005D            545   ;------------------------------------------------------------
005D            546   ;Allocation info for local variables in function 'Timer2_ISR'
005D            547   ;------------------------------------------------------------
005D            548   ;------------------------------------------------------------
005D            549   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:99: void Timer2_ISR (void) interrupt 5
005D            550   ;        -----------------------------------------
005D            551   ;         function Timer2_ISR
005D            552   ;        -----------------------------------------
005D            553   _Timer2_ISR:
005D C0E0       554            push    acc
005F C002       555            push    ar2
0061 C003       556            push    ar3
0063 C0D0       557            push    psw
0065 75D000     558            mov     psw,#0x00
0068            559   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:101: TF2H = 0; // Clear Timer2 interrupt flag
0068 C2CF       560            clr     _TF2H
006A            561   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:103: pwm_count++;
006A 05E8       562            inc     _pwm_count
006C            563   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:104: if(pwm_count>100) pwm_count=0;
006C E5E8       564            mov     a,_pwm_count
006E 249B       565            add     a,#0xff - 0x64
0070 5001       566            jnc     L004002?
0072 75E800     567            mov     _pwm_count,#0x00
0075            568   L004002?:
0075            569   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:106: OUT0=pwm_count>PWM_1?0:1;
0075 AAE8       570            mov     r2,_pwm_count
0077 7B00       571            mov     r3,#0x00
0079 C3         572            clr     c
007A E568       573            mov     a,_PWM_1
007C 9A         574            subb    a,r2
007D E569       575            mov     a,(_PWM_1 + 1)
007F 9B         576            subb    a,r3
0080 9258       577            mov  _Timer2_ISR_sloc0_1_0,c
0082 B3         578            cpl     c
0083 92A0       579            mov     _P2_0,c
0085            580   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:107: OUT1=pwm_count>PWM_2?0:1;
0085 AAE8       581            mov     r2,_pwm_count
0087 7B00       582            mov     r3,#0x00
0089 C3         583            clr     c
008A E500       584            mov     a,_PWM_2
008C 9A         585            subb    a,r2
008D E501       586            mov     a,(_PWM_2 + 1)
008F 9B         587            subb    a,r3
0090 9258       588            mov  _Timer2_ISR_sloc0_1_0,c
0092 B3         589            cpl     c
0093 92A1       590            mov     _P2_1,c
0095 D0D0       591            pop     psw
0097 D003       592            pop     ar3
0099 D002       593            pop     ar2
009B D0E0       594            pop     acc
009D 32         595            reti
009E            596   ;        eliminated unneeded push/pop dpl
009E            597   ;        eliminated unneeded push/pop dph
009E            598   ;        eliminated unneeded push/pop b
009E            599   ;------------------------------------------------------------
009E            600   ;Allocation info for local variables in function 'InitADC'
009E            601   ;------------------------------------------------------------
009E            602   ;------------------------------------------------------------
009E            603   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:111: void InitADC (void)
009E            604   ;        -----------------------------------------
009E            605   ;         function InitADC
009E            606   ;        -----------------------------------------
009E            607   _InitADC:
009E            608   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:114: ADC0CF = 0xF8; // SAR clock = 31, Right-justified result
009E 75BCF8     609            mov     _ADC0CF,#0xF8
00A1            610   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:115: ADC0CN = 0b_1000_0000; // AD0EN=1, AD0TM=0
00A1 75E880     611            mov     _ADC0CN,#0x80
00A4            612   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:116: REF0CN = 0b_0000_1000; //Select VDD as the voltage reference for the converter
00A4 75D108     613            mov     _REF0CN,#0x08
00A7 22         614            ret
00A8            615   ;------------------------------------------------------------
00A8            616   ;Allocation info for local variables in function 'InitPinADC'
00A8            617   ;------------------------------------------------------------
00A8            618   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
00A8            619   ;portno                    Allocated to registers r2 
00A8            620   ;mask                      Allocated to registers r3 
00A8            621   ;------------------------------------------------------------
00A8            622   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:119: void InitPinADC (unsigned char portno, unsigned char pinno)
00A8            623   ;        -----------------------------------------
00A8            624   ;         function InitPinADC
00A8            625   ;        -----------------------------------------
00A8            626   _InitPinADC:
00A8 AA82       627            mov     r2,dpl
00AA            628   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:123: mask=1<<pinno;
00AA 8570F0     629            mov     b,_InitPinADC_PARM_2
00AD 05F0       630            inc     b
00AF 7401       631            mov     a,#0x01
00B1 8001       632            sjmp    L006012?
00B3            633   L006010?:
00B3 25E0       634            add     a,acc
00B5            635   L006012?:
00B5 D5F058     636            djnz    b,L006010?
00B8 FB         637            mov     r3,a
00B9            638   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:125: switch (portno)
00B9 EA         639            mov     a,r2
00BA 24FC       640            add     a,#0xff - 0x03
00BC 4001       641            jc      L006007?
00BE EA         642            mov     a,r2
00BF 2A         643            add     a,r2
00C0 2A         644            add     a,r2
00C1 9094D8     645            mov     dptr,#L006014?
00C4 73         646            jmp     @a+dptr
00C5            647   L006014?:
00C5 020100     648            ljmp    L006001?
00C8 020100     649            ljmp    L006002?
00CB 020100     650            ljmp    L006003?
00CE 020100     651            ljmp    L006004?
00D1            652   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:127: case 0:
00D1            653   L006001?:
00D1            654   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:128: P0MDIN &= (~mask); // Set pin as analog input
00D1 EB         655            mov     a,r3
00D2 F4         656            cpl     a
00D3 52F1       657            anl     _P0MDIN,a
00D5            658   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:129: P0SKIP |= mask; // Skip Crossbar decoding for this pin
00D5 EB         659            mov     a,r3
00D6 42D4       660            orl     _P0SKIP,a
00D8            661   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:130: break;
00D8            662   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:131: case 1:
00D8 22         663            ret
00D9            664   L006002?:
00D9            665   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:132: P1MDIN &= (~mask); // Set pin as analog input
00D9 EB         666            mov     a,r3
00DA F4         667            cpl     a
00DB 52F2       668            anl     _P1MDIN,a
00DD            669   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:133: P1SKIP |= mask; // Skip Crossbar decoding for this pin
00DD EB         670            mov     a,r3
00DE 42D5       671            orl     _P1SKIP,a
00E0            672   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:134: break;
00E0            673   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:135: case 2:
00E0 22         674            ret
00E1            675   L006003?:
00E1            676   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:136: P2MDIN &= (~mask); // Set pin as analog input
00E1 EB         677            mov     a,r3
00E2 F4         678            cpl     a
00E3 52F3       679            anl     _P2MDIN,a
00E5            680   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:137: P2SKIP |= mask; // Skip Crossbar decoding for this pin
00E5 EB         681            mov     a,r3
00E6 42D6       682            orl     _P2SKIP,a
00E8            683   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:138: break;
00E8            684   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:139: case 3:
00E8 22         685            ret
00E9            686   L006004?:
00E9            687   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:140: P3MDIN &= (~mask); // Set pin as analog input
00E9 EB         688            mov     a,r3
00EA F4         689            cpl     a
00EB FA         690            mov     r2,a
00EC 52F4       691            anl     _P3MDIN,a
00EE            692   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:141: P3SKIP |= mask; // Skip Crossbar decoding for this pin
00EE EB         693            mov     a,r3
00EF 42DF       694            orl     _P3SKIP,a
00F1            695   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:145: }
00F1            696   L006007?:
00F1 22         697            ret
00F2            698   ;------------------------------------------------------------
00F2            699   ;Allocation info for local variables in function 'ADC_at_Pin'
00F2            700   ;------------------------------------------------------------
00F2            701   ;pin                       Allocated to registers 
00F2            702   ;------------------------------------------------------------
00F2            703   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:148: unsigned int ADC_at_Pin(unsigned char pin)
00F2            704   ;        -----------------------------------------
00F2            705   ;         function ADC_at_Pin
00F2            706   ;        -----------------------------------------
00F2            707   _ADC_at_Pin:
00F2 8582BB     708            mov     _AMX0P,dpl
00F5            709   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:151: AMX0N = LQFP32_MUX_GND;  // GND is negative input (Single-ended Mode)
00F5 75BA1F     710            mov     _AMX0N,#0x1F
00F8            711   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:153: AD0BUSY=1;
00F8 D2EC       712            setb    _AD0BUSY
00FA            713   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:154: while (AD0BUSY); // Wait for dummy conversion to finish
00FA            714   L007001?:
00FA 20EC18     715            jb      _AD0BUSY,L007001?
00FD            716   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:156: AD0BUSY = 1;
00FD D2EC       717            setb    _AD0BUSY
00FF            718   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:157: while (AD0BUSY); // Wait for conversion to complete
00FF            719   L007004?:
00FF 20EC58     720            jb      _AD0BUSY,L007004?
0102            721   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:158: return (ADC0L+(ADC0H*0x100));
0102 AABD       722            mov     r2,_ADC0L
0104 7B00       723            mov     r3,#0x00
0106 ADBE       724            mov     r5,_ADC0H
0108 7C00       725            mov     r4,#0x00
010A EC         726            mov     a,r4
010B 2A         727            add     a,r2
010C F582       728            mov     dpl,a
010E ED         729            mov     a,r5
010F 3B         730            addc    a,r3
0110 F583       731            mov     dph,a
0112 22         732            ret
0113            733   ;------------------------------------------------------------
0113            734   ;Allocation info for local variables in function 'Volts_at_Pin'
0113            735   ;------------------------------------------------------------
0113            736   ;pin                       Allocated to registers r2 
0113            737   ;------------------------------------------------------------
0113            738   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:161: float Volts_at_Pin(unsigned char pin)
0113            739   ;        -----------------------------------------
0113            740   ;         function Volts_at_Pin
0113            741   ;        -----------------------------------------
0113            742   _Volts_at_Pin:
0113            743   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:163: return ((ADC_at_Pin(pin)*3.30)/1024.0);
0113 120100     744            lcall   _ADC_at_Pin
0116 120100     745            lcall   ___uint2fs
0119 AA82       746            mov     r2,dpl
011B AB83       747            mov     r3,dph
011D ACF0       748            mov     r4,b
011F FD         749            mov     r5,a
0120 C002       750            push    ar2
0122 C003       751            push    ar3
0124 C004       752            push    ar4
0126 C005       753            push    ar5
0128 903333     754            mov     dptr,#0x3333
012B 75F053     755            mov     b,#0x53
012E 7440       756            mov     a,#0x40
0130 120100     757            lcall   ___fsmul
0133 AA82       758            mov     r2,dpl
0135 AB83       759            mov     r3,dph
0137 ACF0       760            mov     r4,b
0139 FD         761            mov     r5,a
013A E581       762            mov     a,sp
013C 24FC       763            add     a,#0xfc
013E F581       764            mov     sp,a
0140 E4         765            clr     a
0141 C0E0       766            push    acc
0143 C0E0       767            push    acc
0145 7480       768            mov     a,#0x80
0147 C0E0       769            push    acc
0149 7444       770            mov     a,#0x44
014B C0E0       771            push    acc
014D 8A82       772            mov     dpl,r2
014F 8B83       773            mov     dph,r3
0151 8CF0       774            mov     b,r4
0153 ED         775            mov     a,r5
0154 120100     776            lcall   ___fsdiv
0157 AA82       777            mov     r2,dpl
0159 AB83       778            mov     r3,dph
015B ACF0       779            mov     r4,b
015D FD         780            mov     r5,a
015E E581       781            mov     a,sp
0160 24FC       782            add     a,#0xfc
0162 F581       783            mov     sp,a
0164 8A82       784            mov     dpl,r2
0166 8B83       785            mov     dph,r3
0168 8CF0       786            mov     b,r4
016A ED         787            mov     a,r5
016B 22         788            ret
016C            789   ;------------------------------------------------------------
016C            790   ;Allocation info for local variables in function 'main'
016C            791   ;------------------------------------------------------------
016C            792   ;selection                 Allocated with name '_main_selection_1_58'
016C            793   ;voltage                   Allocated with name '_main_voltage_1_58'
016C            794   ;------------------------------------------------------------
016C            795   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:166: void main (void)
016C            796   ;        -----------------------------------------
016C            797   ;         function main
016C            798   ;        -----------------------------------------
016C            799   _main:
016C            800   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:169: volatile float voltage = 0;
016C 750800     801            mov     _main_voltage_1_58,#0x00
016F 750900     802            mov     (_main_voltage_1_58 + 1),#0x00
0172 750A00     803            mov     (_main_voltage_1_58 + 2),#0x00
0175 750B00     804            mov     (_main_voltage_1_58 + 3),#0x00
0178            805   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:172: PORT_Init();     // Initialize Port I/O
0178 120100     806            lcall   _PORT_Init
017B            807   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:175: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
017B 74D8       808            mov     a,#__str_0
017D C0E0       809            push    acc
017F 7497       810            mov     a,#(__str_0 >> 8)
0181 C0E0       811            push    acc
0183 7480       812            mov     a,#0x80
0185 C0E0       813            push    acc
0187 120100     814            lcall   _printf
018A 1581       815            dec     sp
018C 1581       816            dec     sp
018E 1581       817            dec     sp
0190            818   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:176: InitPinADC(1, 7);
0190 757007     819            mov     _InitPinADC_PARM_2,#0x07
0193 758201     820            mov     dpl,#0x01
0196 120100     821            lcall   _InitPinADC
0199            822   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:177: InitADC();
0199 120100     823            lcall   _InitADC
019C            824   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:179: while(1)
019C            825   L009015?:
019C            826   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:181: voltage = Volts_at_Pin(LQFP32_MUX_P1_7);
019C 758207     827            mov     dpl,#0x07
019F 120100     828            lcall   _Volts_at_Pin
01A2 858208     829            mov     _main_voltage_1_58,dpl
01A5 858309     830            mov     (_main_voltage_1_58 + 1),dph
01A8 85F00A     831            mov     (_main_voltage_1_58 + 2),b
01AB F50B       832            mov     (_main_voltage_1_58 + 3),a
01AD            833   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:182: PWM_1 = 0;
01AD            834   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:183: PWM_2 = 0;
01AD E4         835            clr     a
01AE F568       836            mov     _PWM_1,a
01B0 F569       837            mov     (_PWM_1 + 1),a
01B2 F500       838            mov     _PWM_2,a
01B4 F501       839            mov     (_PWM_2 + 1),a
01B6            840   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:184: printf(GOTO_YX, 1,1);
01B6 7401       841            mov     a,#0x01
01B8 C0E0       842            push    acc
01BA E4         843            clr     a
01BB C0E0       844            push    acc
01BD 7401       845            mov     a,#0x01
01BF C0E0       846            push    acc
01C1 E4         847            clr     a
01C2 C0E0       848            push    acc
01C4 7498       849            mov     a,#__str_1
01C6 C0E0       850            push    acc
01C8 7498       851            mov     a,#(__str_1 >> 8)
01CA C0E0       852            push    acc
01CC 7480       853            mov     a,#0x80
01CE C0E0       854            push    acc
01D0 120100     855            lcall   _printf
01D3 E581       856            mov     a,sp
01D5 24F9       857            add     a,#0xf9
01D7 F581       858            mov     sp,a
01D9            859   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:185: printf("\rChoose between two options: temperature controlled motor (1), or user-controlled motor (other): ");
01D9 74D8       860            mov     a,#__str_2
01DB C0E0       861            push    acc
01DD 7498       862            mov     a,#(__str_2 >> 8)
01DF C0E0       863            push    acc
01E1 7480       864            mov     a,#0x80
01E3 C0E0       865            push    acc
01E5 120100     866            lcall   _printf
01E8 1581       867            dec     sp
01EA 1581       868            dec     sp
01EC 1581       869            dec     sp
01EE            870   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:186: scanf("%d", selection);
01EE C0B8       871            push    _main_selection_1_58
01F0 C0B9       872            push    (_main_selection_1_58 + 1)
01F2 7418       873            mov     a,#__str_3
01F4 C0E0       874            push    acc
01F6 7499       875            mov     a,#(__str_3 >> 8)
01F8 C0E0       876            push    acc
01FA 7480       877            mov     a,#0x80
01FC C0E0       878            push    acc
01FE 120100     879            lcall   _scanf
0201 E581       880            mov     a,sp
0203 24FB       881            add     a,#0xfb
0205 F581       882            mov     sp,a
0207            883   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:188: if(selection==1)
0207 7401       884            mov     a,#0x01
0209 B5B898     885            cjne    a,_main_selection_1_58,L009024?
020C E4         886            clr     a
020D B5B998     887            cjne    a,(_main_selection_1_58 + 1),L009024?
0210 8001       888            sjmp    L009025?
0212            889   L009024?:
0212 8001       890            sjmp    L009012?
0214            891   L009025?:
0214            892   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:190: printf("\rvoltage: %.3f", voltage);
0214 C008       893            push    _main_voltage_1_58
0216 C009       894            push    (_main_voltage_1_58 + 1)
0218 C00A       895            push    (_main_voltage_1_58 + 2)
021A C00B       896            push    (_main_voltage_1_58 + 3)
021C 7458       897            mov     a,#__str_4
021E C0E0       898            push    acc
0220 749A       899            mov     a,#(__str_4 >> 8)
0222 C0E0       900            push    acc
0224 7480       901            mov     a,#0x80
0226 C0E0       902            push    acc
0228 120100     903            lcall   _printf
022B E581       904            mov     a,sp
022D 24F9       905            add     a,#0xf9
022F F581       906            mov     sp,a
0231            907   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:191: printf("\nType 'o' and press enter to end PWM: ");
0231 7498       908            mov     a,#__str_5
0233 C0E0       909            push    acc
0235 749A       910            mov     a,#(__str_5 >> 8)
0237 C0E0       911            push    acc
0239 7480       912            mov     a,#0x80
023B C0E0       913            push    acc
023D 120100     914            lcall   _printf
0240 1581       915            dec     sp
0242 1581       916            dec     sp
0244 1581       917            dec     sp
0246            918   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:192: scanf("%s", &proceed);
0246 74A8       919            mov     a,#_proceed
0248 C0E0       920            push    acc
024A 7441       921            mov     a,#(_proceed >> 8)
024C C0E0       922            push    acc
024E 7440       923            mov     a,#0x40
0250 C0E0       924            push    acc
0252 74D8       925            mov     a,#__str_6
0254 C0E0       926            push    acc
0256 749A       927            mov     a,#(__str_6 >> 8)
0258 C0E0       928            push    acc
025A 7480       929            mov     a,#0x80
025C C0E0       930            push    acc
025E 120100     931            lcall   _scanf
0261 E581       932            mov     a,sp
0263 24FA       933            add     a,#0xfa
0265 F581       934            mov     sp,a
0267 020100     935            ljmp    L009013?
026A            936   L009012?:
026A            937   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:195: printf("\rPlease Input PWM Range 100 to -100: ");
026A 7458       938            mov     a,#__str_7
026C C0E0       939            push    acc
026E 749B       940            mov     a,#(__str_7 >> 8)
0270 C0E0       941            push    acc
0272 7480       942            mov     a,#0x80
0274 C0E0       943            push    acc
0276 120100     944            lcall   _printf
0279 1581       945            dec     sp
027B 1581       946            dec     sp
027D 1581       947            dec     sp
027F            948   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:196: scanf("%d", &DRV);
027F 74C0       949            mov     a,#_DRV
0281 C0E0       950            push    acc
0283 7415       951            mov     a,#(_DRV >> 8)
0285 C0E0       952            push    acc
0287 7440       953            mov     a,#0x40
0289 C0E0       954            push    acc
028B 7418       955            mov     a,#__str_3
028D C0E0       956            push    acc
028F 7499       957            mov     a,#(__str_3 >> 8)
0291 C0E0       958            push    acc
0293 7480       959            mov     a,#0x80
0295 C0E0       960            push    acc
0297 120100     961            lcall   _scanf
029A E581       962            mov     a,sp
029C 24FA       963            add     a,#0xfa
029E F581       964            mov     sp,a
02A0            965   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:197: if(DRV < -100 || DRV > 100)
02A0 C3         966            clr     c
02A1 E5C0       967            mov     a,_DRV
02A3 949C       968            subb    a,#0x9C
02A5 E5C1       969            mov     a,(_DRV + 1)
02A7 6480       970            xrl     a,#0x80
02A9 947F       971            subb    a,#0x7f
02AB 4001       972            jc      L009007?
02AD 7464       973            mov     a,#0x64
02AF 95C0       974            subb    a,_DRV
02B1 E4         975            clr     a
02B2 6480       976            xrl     a,#0x80
02B4 85C1F0     977            mov     b,(_DRV + 1)
02B7 63F080     978            xrl     b,#0x80
02BA 95F0       979            subb    a,b
02BC 5001       980            jnc     L009008?
02BE            981   L009007?:
02BE            982   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:198: printf("Value Not Within Range");
02BE 7418       983            mov     a,#__str_8
02C0 C0E0       984            push    acc
02C2 749C       985            mov     a,#(__str_8 >> 8)
02C4 C0E0       986            push    acc
02C6 7480       987            mov     a,#0x80
02C8 C0E0       988            push    acc
02CA 120100     989            lcall   _printf
02CD 1581       990            dec     sp
02CF 1581       991            dec     sp
02D1 1581       992            dec     sp
02D3 8001       993            sjmp    L009009?
02D5            994   L009008?:
02D5            995   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:199: else if(DRV > 0)
02D5 C3         996            clr     c
02D6 E4         997            clr     a
02D7 95C0       998            subb    a,_DRV
02D9 E4         999            clr     a
02DA 6480      1000            xrl     a,#0x80
02DC 85C1F0    1001            mov     b,(_DRV + 1)
02DF 63F080    1002            xrl     b,#0x80
02E2 95F0      1003            subb    a,b
02E4 5001      1004            jnc     L009005?
02E6           1005   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:201: PWM_1 = DRV;
02E6 85C068    1006            mov     _PWM_1,_DRV
02E9 85C169    1007            mov     (_PWM_1 + 1),(_DRV + 1)
02EC           1008   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:202: PWM_2 = 0;
02EC E4        1009            clr     a
02ED F500      1010            mov     _PWM_2,a
02EF F501      1011            mov     (_PWM_2 + 1),a
02F1 8001      1012            sjmp    L009009?
02F3           1013   L009005?:
02F3           1014   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:204: else if(DRV < 0)
02F3 E5C1      1015            mov     a,(_DRV + 1)
02F5 30E7D8    1016            jnb     acc.7,L009002?
02F8           1017   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:206: PWM_1 = 0;
02F8 E4        1018            clr     a
02F9 F568      1019            mov     _PWM_1,a
02FB F569      1020            mov     (_PWM_1 + 1),a
02FD           1021   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:207: PWM_2 = -DRV;
02FD C3        1022            clr     c
02FE E4        1023            clr     a
02FF 95C0      1024            subb    a,_DRV
0301 F500      1025            mov     _PWM_2,a
0303 E4        1026            clr     a
0304 95C1      1027            subb    a,(_DRV + 1)
0306 F501      1028            mov     (_PWM_2 + 1),a
0308 8001      1029            sjmp    L009009?
030A           1030   L009002?:
030A           1031   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:211: PWM_1 = 0;
030A           1032   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:212: PWM_2 = 0;
030A E4        1033            clr     a
030B F568      1034            mov     _PWM_1,a
030D F569      1035            mov     (_PWM_1 + 1),a
030F F500      1036            mov     _PWM_2,a
0311 F501      1037            mov     (_PWM_2 + 1),a
0313           1038   L009009?:
0313           1039   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:214: printf("\nType 'o' and press enter to end PWM: ");
0313 7498      1040            mov     a,#__str_5
0315 C0E0      1041            push    acc
0317 749A      1042            mov     a,#(__str_5 >> 8)
0319 C0E0      1043            push    acc
031B 7480      1044            mov     a,#0x80
031D C0E0      1045            push    acc
031F 120100    1046            lcall   _printf
0322 1581      1047            dec     sp
0324 1581      1048            dec     sp
0326 1581      1049            dec     sp
0328           1050   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:215: scanf("%s", &proceed);
0328 74A8      1051            mov     a,#_proceed
032A C0E0      1052            push    acc
032C 7441      1053            mov     a,#(_proceed >> 8)
032E C0E0      1054            push    acc
0330 7440      1055            mov     a,#0x40
0332 C0E0      1056            push    acc
0334 74D8      1057            mov     a,#__str_6
0336 C0E0      1058            push    acc
0338 749A      1059            mov     a,#(__str_6 >> 8)
033A C0E0      1060            push    acc
033C 7480      1061            mov     a,#0x80
033E C0E0      1062            push    acc
0340 120100    1063            lcall   _scanf
0343 E581      1064            mov     a,sp
0345 24FA      1065            add     a,#0xfa
0347 F581      1066            mov     sp,a
0349           1067   L009013?:
0349           1068   ;        C:\Users\jeffreyliou\Desktop\elec291\CrossIde1.c:217: printf("\x1b[2J");
0349 74D8      1069            mov     a,#__str_0
034B C0E0      1070            push    acc
034D 7497      1071            mov     a,#(__str_0 >> 8)
034F C0E0      1072            push    acc
0351 7480      1073            mov     a,#0x80
0353 C0E0      1074            push    acc
0355 120100    1075            lcall   _printf
0358 1581      1076            dec     sp
035A 1581      1077            dec     sp
035C 1581      1078            dec     sp
035E 020100    1079            ljmp    L009015?
0361           1080            rseg R_CSEG
0361           1081   
0000           1082            rseg R_XINIT
0000           1083   
0000           1084            rseg R_CONST
0000           1085   __str_0:
0000 1B        1086            db 0x1B
0001 5B324A    1087            db '[2J'
0004 00        1088            db 0x00
0005           1089   __str_1:
0005 1B        1090            db 0x1B
0006 5B25643B  1091            db '[%d;%dH'
     256448
000D 00        1092            db 0x00
000E           1093   __str_2:
000E 0D        1094            db 0x0D
000F 43686F6F  1095            db 'Choose between two options: temperature controlled motor (1'
     73652062
     65747765
     656E2074
     776F206F
     7074696F
     6E733A20
     74656D70
     65726174
     75726520
     636F6E74
     726F6C6C
     6564206D
     6F746F72
     202831
004A 292C206F  1096            db '), or user-controlled motor (other): '
     72207573
     65722D63
     6F6E7472
     6F6C6C65
     64206D6F
     746F7220
     286F7468
     6572293A
     20
006F 00        1097            db 0x00
0070           1098   __str_3:
0070 2564      1099            db '%d'
0072 00        1100            db 0x00
0073           1101   __str_4:
0073 0D        1102            db 0x0D
0074 766F6C74  1103            db 'voltage: %.3f'
     6167653A
     20252E33
     66
0081 00        1104            db 0x00
0082           1105   __str_5:
0082 0A        1106            db 0x0A
0083 54797065  1107            db 'Type '
     20
0088 27        1108            db 0x27
0089 6F        1109            db 'o'
008A 27        1110            db 0x27
008B 20616E64  1111            db ' and press enter to end PWM: '
     20707265
     73732065
     6E746572
     20746F20
     656E6420
     50574D3A
     20
00A8 00        1112            db 0x00
00A9           1113   __str_6:
00A9 2573      1114            db '%s'
00AB 00        1115            db 0x00
00AC           1116   __str_7:
00AC 0D        1117            db 0x0D
00AD 506C6561  1118            db 'Please Input PWM Range 100 to -100: '
     73652049
     6E707574
     2050574D
     2052616E
     67652031
     30302074
     6F202D31
     30303A20
00D1 00        1119            db 0x00
00D2           1120   __str_8:
00D2 56616C75  1121            db 'Value Not Within Range'
     65204E6F
     74205769
     7468696E
     2052616E
     6765
00E8 00        1122            db 0x00
00E9           1123   
002E           1124            CSEG
002E           1125   
002E           1126   end
